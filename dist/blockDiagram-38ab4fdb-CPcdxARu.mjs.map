{"version":3,"file":"blockDiagram-38ab4fdb-CPcdxARu.mjs","sources":["../node_modules/mermaid/dist/blockDiagram-38ab4fdb.js"],"sourcesContent":["var _a, _b;\nimport { c as getConfig, F as getConfig$1, l as log, v as clear$1, e as common, k as getStylesFromArray, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport clone from \"lodash-es/clone.js\";\nimport * as khroma from \"khroma\";\nimport { h as insertEdge, f as insertEdgeLabel, j as positionEdgeLabel, e as insertNode, p as positionNode, a as insertMarkers } from \"./edges-e0da2a9e.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select, scaleOrdinal, schemeTableau10 } from \"d3\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 7], $V1 = [1, 13], $V2 = [1, 14], $V3 = [1, 15], $V4 = [1, 19], $V5 = [1, 16], $V6 = [1, 17], $V7 = [1, 18], $V8 = [8, 30], $V9 = [8, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Va = [1, 23], $Vb = [1, 24], $Vc = [8, 15, 16, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Vd = [8, 15, 16, 21, 27, 28, 29, 30, 31, 32, 40, 44, 47], $Ve = [1, 49];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"spaceLines\": 3, \"SPACELINE\": 4, \"NL\": 5, \"separator\": 6, \"SPACE\": 7, \"EOF\": 8, \"start\": 9, \"BLOCK_DIAGRAM_KEY\": 10, \"document\": 11, \"stop\": 12, \"statement\": 13, \"link\": 14, \"LINK\": 15, \"START_LINK\": 16, \"LINK_LABEL\": 17, \"STR\": 18, \"nodeStatement\": 19, \"columnsStatement\": 20, \"SPACE_BLOCK\": 21, \"blockStatement\": 22, \"classDefStatement\": 23, \"cssClassStatement\": 24, \"styleStatement\": 25, \"node\": 26, \"SIZE\": 27, \"COLUMNS\": 28, \"id-block\": 29, \"end\": 30, \"block\": 31, \"NODE_ID\": 32, \"nodeShapeNLabel\": 33, \"dirList\": 34, \"DIR\": 35, \"NODE_DSTART\": 36, \"NODE_DEND\": 37, \"BLOCK_ARROW_START\": 38, \"BLOCK_ARROW_END\": 39, \"classDef\": 40, \"CLASSDEF_ID\": 41, \"CLASSDEF_STYLEOPTS\": 42, \"DEFAULT\": 43, \"class\": 44, \"CLASSENTITY_IDS\": 45, \"STYLECLASS\": 46, \"style\": 47, \"STYLE_ENTITY_IDS\": 48, \"STYLE_DEFINITION_DATA\": 49, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SPACELINE\", 5: \"NL\", 7: \"SPACE\", 8: \"EOF\", 10: \"BLOCK_DIAGRAM_KEY\", 15: \"LINK\", 16: \"START_LINK\", 17: \"LINK_LABEL\", 18: \"STR\", 21: \"SPACE_BLOCK\", 27: \"SIZE\", 28: \"COLUMNS\", 29: \"id-block\", 30: \"end\", 31: \"block\", 32: \"NODE_ID\", 35: \"DIR\", 36: \"NODE_DSTART\", 37: \"NODE_DEND\", 38: \"BLOCK_ARROW_START\", 39: \"BLOCK_ARROW_END\", 40: \"classDef\", 41: \"CLASSDEF_ID\", 42: \"CLASSDEF_STYLEOPTS\", 43: \"DEFAULT\", 44: \"class\", 45: \"CLASSENTITY_IDS\", 46: \"STYLECLASS\", 47: \"style\", 48: \"STYLE_ENTITY_IDS\", 49: \"STYLE_DEFINITION_DATA\" },\n    productions_: [0, [3, 1], [3, 2], [3, 2], [6, 1], [6, 1], [6, 1], [9, 3], [12, 1], [12, 1], [12, 2], [12, 2], [11, 1], [11, 2], [14, 1], [14, 4], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [19, 3], [19, 2], [19, 1], [20, 1], [22, 4], [22, 3], [26, 1], [26, 2], [34, 1], [34, 2], [33, 3], [33, 4], [23, 3], [23, 3], [24, 3], [25, 3]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 4:\n          yy.getLogger().debug(\"Rule: separator (NL) \");\n          break;\n        case 5:\n          yy.getLogger().debug(\"Rule: separator (Space) \");\n          break;\n        case 6:\n          yy.getLogger().debug(\"Rule: separator (EOF) \");\n          break;\n        case 7:\n          yy.getLogger().debug(\"Rule: hierarchy: \", $$[$0 - 1]);\n          yy.setHierarchy($$[$0 - 1]);\n          break;\n        case 8:\n          yy.getLogger().debug(\"Stop NL \");\n          break;\n        case 9:\n          yy.getLogger().debug(\"Stop EOF \");\n          break;\n        case 10:\n          yy.getLogger().debug(\"Stop NL2 \");\n          break;\n        case 11:\n          yy.getLogger().debug(\"Stop EOF2 \");\n          break;\n        case 12:\n          yy.getLogger().debug(\"Rule: statement: \", $$[$0]);\n          typeof $$[$0].length === \"number\" ? this.$ = $$[$0] : this.$ = [$$[$0]];\n          break;\n        case 13:\n          yy.getLogger().debug(\"Rule: statement #2: \", $$[$0 - 1]);\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\n          break;\n        case 14:\n          yy.getLogger().debug(\"Rule: link: \", $$[$0], yytext);\n          this.$ = { edgeTypeStr: $$[$0], label: \"\" };\n          break;\n        case 15:\n          yy.getLogger().debug(\"Rule: LABEL link: \", $$[$0 - 3], $$[$0 - 1], $$[$0]);\n          this.$ = { edgeTypeStr: $$[$0], label: $$[$0 - 1] };\n          break;\n        case 18:\n          const num = parseInt($$[$0]);\n          const spaceId = yy.generateId();\n          this.$ = { id: spaceId, type: \"space\", label: \"\", width: num, children: [] };\n          break;\n        case 23:\n          yy.getLogger().debug(\"Rule: (nodeStatement link node) \", $$[$0 - 2], $$[$0 - 1], $$[$0], \" typestr: \", $$[$0 - 1].edgeTypeStr);\n          const edgeData = yy.edgeStrToEdgeData($$[$0 - 1].edgeTypeStr);\n          this.$ = [\n            { id: $$[$0 - 2].id, label: $$[$0 - 2].label, type: $$[$0 - 2].type, directions: $$[$0 - 2].directions },\n            { id: $$[$0 - 2].id + \"-\" + $$[$0].id, start: $$[$0 - 2].id, end: $$[$0].id, label: $$[$0 - 1].label, type: \"edge\", directions: $$[$0].directions, arrowTypeEnd: edgeData, arrowTypeStart: \"arrow_open\" },\n            { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions }\n          ];\n          break;\n        case 24:\n          yy.getLogger().debug(\"Rule: nodeStatement (abc88 node size) \", $$[$0 - 1], $$[$0]);\n          this.$ = { id: $$[$0 - 1].id, label: $$[$0 - 1].label, type: yy.typeStr2Type($$[$0 - 1].typeStr), directions: $$[$0 - 1].directions, widthInColumns: parseInt($$[$0], 10) };\n          break;\n        case 25:\n          yy.getLogger().debug(\"Rule: nodeStatement (node) \", $$[$0]);\n          this.$ = { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions, widthInColumns: 1 };\n          break;\n        case 26:\n          yy.getLogger().debug(\"APA123\", this ? this : \"na\");\n          yy.getLogger().debug(\"COLUMNS: \", $$[$0]);\n          this.$ = { type: \"column-setting\", columns: $$[$0] === \"auto\" ? -1 : parseInt($$[$0]) };\n          break;\n        case 27:\n          yy.getLogger().debug(\"Rule: id-block statement : \", $$[$0 - 2], $$[$0 - 1]);\n          yy.generateId();\n          this.$ = { ...$$[$0 - 2], type: \"composite\", children: $$[$0 - 1] };\n          break;\n        case 28:\n          yy.getLogger().debug(\"Rule: blockStatement : \", $$[$0 - 2], $$[$0 - 1], $$[$0]);\n          const id = yy.generateId();\n          this.$ = { id, type: \"composite\", label: \"\", children: $$[$0 - 1] };\n          break;\n        case 29:\n          yy.getLogger().debug(\"Rule: node (NODE_ID separator): \", $$[$0]);\n          this.$ = { id: $$[$0] };\n          break;\n        case 30:\n          yy.getLogger().debug(\"Rule: node (NODE_ID nodeShapeNLabel separator): \", $$[$0 - 1], $$[$0]);\n          this.$ = { id: $$[$0 - 1], label: $$[$0].label, typeStr: $$[$0].typeStr, directions: $$[$0].directions };\n          break;\n        case 31:\n          yy.getLogger().debug(\"Rule: dirList: \", $$[$0]);\n          this.$ = [$$[$0]];\n          break;\n        case 32:\n          yy.getLogger().debug(\"Rule: dirList: \", $$[$0 - 1], $$[$0]);\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\n          break;\n        case 33:\n          yy.getLogger().debug(\"Rule: nodeShapeNLabel: \", $$[$0 - 2], $$[$0 - 1], $$[$0]);\n          this.$ = { typeStr: $$[$0 - 2] + $$[$0], label: $$[$0 - 1] };\n          break;\n        case 34:\n          yy.getLogger().debug(\"Rule: BLOCK_ARROW nodeShapeNLabel: \", $$[$0 - 3], $$[$0 - 2], \" #3:\", $$[$0 - 1], $$[$0]);\n          this.$ = { typeStr: $$[$0 - 3] + $$[$0], label: $$[$0 - 2], directions: $$[$0 - 1] };\n          break;\n        case 35:\n        case 36:\n          this.$ = { type: \"classDef\", id: $$[$0 - 1].trim(), css: $$[$0].trim() };\n          break;\n        case 37:\n          this.$ = { type: \"applyClass\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\n          break;\n        case 38:\n          this.$ = { type: \"applyStyles\", id: $$[$0 - 1].trim(), stylesStr: $$[$0].trim() };\n          break;\n      }\n    },\n    table: [{ 9: 1, 10: [1, 2] }, { 1: [3] }, { 11: 3, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 8: [1, 20] }, o($V8, [2, 12], { 13: 4, 19: 5, 20: 6, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 11: 21, 21: $V0, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }), o($V9, [2, 16], { 14: 22, 15: $Va, 16: $Vb }), o($V9, [2, 17]), o($V9, [2, 18]), o($V9, [2, 19]), o($V9, [2, 20]), o($V9, [2, 21]), o($V9, [2, 22]), o($Vc, [2, 25], { 27: [1, 25] }), o($V9, [2, 26]), { 19: 26, 26: 12, 32: $V4 }, { 11: 27, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 41: [1, 28], 43: [1, 29] }, { 45: [1, 30] }, { 48: [1, 31] }, o($Vd, [2, 29], { 33: 32, 36: [1, 33], 38: [1, 34] }), { 1: [2, 7] }, o($V8, [2, 13]), { 26: 35, 32: $V4 }, { 32: [2, 14] }, { 17: [1, 36] }, o($Vc, [2, 24]), { 11: 37, 13: 4, 14: 22, 15: $Va, 16: $Vb, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 30: [1, 38] }, { 42: [1, 39] }, { 42: [1, 40] }, { 46: [1, 41] }, { 49: [1, 42] }, o($Vd, [2, 30]), { 18: [1, 43] }, { 18: [1, 44] }, o($Vc, [2, 23]), { 18: [1, 45] }, { 30: [1, 46] }, o($V9, [2, 28]), o($V9, [2, 35]), o($V9, [2, 36]), o($V9, [2, 37]), o($V9, [2, 38]), { 37: [1, 47] }, { 34: 48, 35: $Ve }, { 15: [1, 50] }, o($V9, [2, 27]), o($Vd, [2, 33]), { 39: [1, 51] }, { 34: 52, 35: $Ve, 39: [2, 31] }, { 32: [2, 15] }, o($Vd, [2, 34]), { 39: [2, 32] }],\n    defaultActions: { 20: [2, 7], 23: [2, 14], 50: [2, 15], 52: [2, 32] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {},\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 10;\n          case 1:\n            yy.getLogger().debug(\"Found space-block\");\n            return 31;\n          case 2:\n            yy.getLogger().debug(\"Found nl-block\");\n            return 31;\n          case 3:\n            yy.getLogger().debug(\"Found space-block\");\n            return 29;\n          case 4:\n            yy.getLogger().debug(\".\", yy_.yytext);\n            break;\n          case 5:\n            yy.getLogger().debug(\"_\", yy_.yytext);\n            break;\n          case 6:\n            return 5;\n          case 7:\n            yy_.yytext = -1;\n            return 28;\n          case 8:\n            yy_.yytext = yy_.yytext.replace(/columns\\s+/, \"\");\n            yy.getLogger().debug(\"COLUMNS (LEX)\", yy_.yytext);\n            return 28;\n          case 9:\n            this.pushState(\"md_string\");\n            break;\n          case 10:\n            return \"MD_STR\";\n          case 11:\n            this.popState();\n            break;\n          case 12:\n            this.pushState(\"string\");\n            break;\n          case 13:\n            yy.getLogger().debug(\"LEX: POPPING STR:\", yy_.yytext);\n            this.popState();\n            break;\n          case 14:\n            yy.getLogger().debug(\"LEX: STR end:\", yy_.yytext);\n            return \"STR\";\n          case 15:\n            yy_.yytext = yy_.yytext.replace(/space\\:/, \"\");\n            yy.getLogger().debug(\"SPACE NUM (LEX)\", yy_.yytext);\n            return 21;\n          case 16:\n            yy_.yytext = \"1\";\n            yy.getLogger().debug(\"COLUMNS (LEX)\", yy_.yytext);\n            return 21;\n          case 17:\n            return 43;\n          case 18:\n            return \"LINKSTYLE\";\n          case 19:\n            return \"INTERPOLATE\";\n          case 20:\n            this.pushState(\"CLASSDEF\");\n            return 40;\n          case 21:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return \"DEFAULT_CLASSDEF_ID\";\n          case 22:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return 41;\n          case 23:\n            this.popState();\n            return 42;\n          case 24:\n            this.pushState(\"CLASS\");\n            return 44;\n          case 25:\n            this.popState();\n            this.pushState(\"CLASS_STYLE\");\n            return 45;\n          case 26:\n            this.popState();\n            return 46;\n          case 27:\n            this.pushState(\"STYLE_STMNT\");\n            return 47;\n          case 28:\n            this.popState();\n            this.pushState(\"STYLE_DEFINITION\");\n            return 48;\n          case 29:\n            this.popState();\n            return 49;\n          case 30:\n            this.pushState(\"acc_title\");\n            return \"acc_title\";\n          case 31:\n            this.popState();\n            return \"acc_title_value\";\n          case 32:\n            this.pushState(\"acc_descr\");\n            return \"acc_descr\";\n          case 33:\n            this.popState();\n            return \"acc_descr_value\";\n          case 34:\n            this.pushState(\"acc_descr_multiline\");\n            break;\n          case 35:\n            this.popState();\n            break;\n          case 36:\n            return \"acc_descr_multiline_value\";\n          case 37:\n            return 30;\n          case 38:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 39:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 40:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ))\");\n            return \"NODE_DEND\";\n          case 41:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 42:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 43:\n            this.popState();\n            yy.getLogger().debug(\"Lex: (-\");\n            return \"NODE_DEND\";\n          case 44:\n            this.popState();\n            yy.getLogger().debug(\"Lex: -)\");\n            return \"NODE_DEND\";\n          case 45:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 46:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ]]\");\n            return \"NODE_DEND\";\n          case 47:\n            this.popState();\n            yy.getLogger().debug(\"Lex: (\");\n            return \"NODE_DEND\";\n          case 48:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ])\");\n            return \"NODE_DEND\";\n          case 49:\n            this.popState();\n            yy.getLogger().debug(\"Lex: /]\");\n            return \"NODE_DEND\";\n          case 50:\n            this.popState();\n            yy.getLogger().debug(\"Lex: /]\");\n            return \"NODE_DEND\";\n          case 51:\n            this.popState();\n            yy.getLogger().debug(\"Lex: )]\");\n            return \"NODE_DEND\";\n          case 52:\n            this.popState();\n            yy.getLogger().debug(\"Lex: )\");\n            return \"NODE_DEND\";\n          case 53:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ]>\");\n            return \"NODE_DEND\";\n          case 54:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ]\");\n            return \"NODE_DEND\";\n          case 55:\n            yy.getLogger().debug(\"Lexa: -)\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 56:\n            yy.getLogger().debug(\"Lexa: (-\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 57:\n            yy.getLogger().debug(\"Lexa: ))\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 58:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 59:\n            yy.getLogger().debug(\"Lex: (((\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 60:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 61:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 62:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 63:\n            yy.getLogger().debug(\"Lexc: >\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 64:\n            yy.getLogger().debug(\"Lexa: ([\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 65:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 66:\n            this.pushState(\"NODE\");\n            return 36;\n          case 67:\n            this.pushState(\"NODE\");\n            return 36;\n          case 68:\n            this.pushState(\"NODE\");\n            return 36;\n          case 69:\n            this.pushState(\"NODE\");\n            return 36;\n          case 70:\n            this.pushState(\"NODE\");\n            return 36;\n          case 71:\n            this.pushState(\"NODE\");\n            return 36;\n          case 72:\n            this.pushState(\"NODE\");\n            return 36;\n          case 73:\n            yy.getLogger().debug(\"Lexa: [\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 74:\n            this.pushState(\"BLOCK_ARROW\");\n            yy.getLogger().debug(\"LEX ARR START\");\n            return 38;\n          case 75:\n            yy.getLogger().debug(\"Lex: NODE_ID\", yy_.yytext);\n            return 32;\n          case 76:\n            yy.getLogger().debug(\"Lex: EOF\", yy_.yytext);\n            return 8;\n          case 77:\n            this.pushState(\"md_string\");\n            break;\n          case 78:\n            this.pushState(\"md_string\");\n            break;\n          case 79:\n            return \"NODE_DESCR\";\n          case 80:\n            this.popState();\n            break;\n          case 81:\n            yy.getLogger().debug(\"Lex: Starting string\");\n            this.pushState(\"string\");\n            break;\n          case 82:\n            yy.getLogger().debug(\"LEX ARR: Starting string\");\n            this.pushState(\"string\");\n            break;\n          case 83:\n            yy.getLogger().debug(\"LEX: NODE_DESCR:\", yy_.yytext);\n            return \"NODE_DESCR\";\n          case 84:\n            yy.getLogger().debug(\"LEX POPPING\");\n            this.popState();\n            break;\n          case 85:\n            yy.getLogger().debug(\"Lex: =>BAE\");\n            this.pushState(\"ARROW_DIR\");\n            break;\n          case 86:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (right): dir:\", yy_.yytext);\n            return \"DIR\";\n          case 87:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (left):\", yy_.yytext);\n            return \"DIR\";\n          case 88:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (x):\", yy_.yytext);\n            return \"DIR\";\n          case 89:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (y):\", yy_.yytext);\n            return \"DIR\";\n          case 90:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (up):\", yy_.yytext);\n            return \"DIR\";\n          case 91:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (down):\", yy_.yytext);\n            return \"DIR\";\n          case 92:\n            yy_.yytext = \"]>\";\n            yy.getLogger().debug(\"Lex (ARROW_DIR end):\", yy_.yytext);\n            this.popState();\n            this.popState();\n            return \"BLOCK_ARROW_END\";\n          case 93:\n            yy.getLogger().debug(\"Lex: LINK\", \"#\" + yy_.yytext + \"#\");\n            return 15;\n          case 94:\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 95:\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 96:\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 97:\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\n            this.pushState(\"LLABEL\");\n            return 16;\n          case 98:\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\n            this.pushState(\"LLABEL\");\n            return 16;\n          case 99:\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\n            this.pushState(\"LLABEL\");\n            return 16;\n          case 100:\n            this.pushState(\"md_string\");\n            break;\n          case 101:\n            yy.getLogger().debug(\"Lex: Starting string\");\n            this.pushState(\"string\");\n            return \"LINK_LABEL\";\n          case 102:\n            this.popState();\n            yy.getLogger().debug(\"Lex: LINK\", \"#\" + yy_.yytext + \"#\");\n            return 15;\n          case 103:\n            this.popState();\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 104:\n            this.popState();\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 105:\n            yy.getLogger().debug(\"Lex: COLON\", yy_.yytext);\n            yy_.yytext = yy_.yytext.slice(1);\n            return 27;\n        }\n      },\n      rules: [/^(?:block-beta\\b)/, /^(?:block\\s+)/, /^(?:block\\n+)/, /^(?:block:)/, /^(?:[\\s]+)/, /^(?:[\\n]+)/, /^(?:((\\u000D\\u000A)|(\\u000A)))/, /^(?:columns\\s+auto\\b)/, /^(?:columns\\s+[\\d]+)/, /^(?:[\"][`])/, /^(?:[^`\"]+)/, /^(?:[`][\"])/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:space[:]\\d+)/, /^(?:space\\b)/, /^(?:default\\b)/, /^(?:linkStyle\\b)/, /^(?:interpolate\\b)/, /^(?:classDef\\s+)/, /^(?:DEFAULT\\s+)/, /^(?:\\w+\\s+)/, /^(?:[^\\n]*)/, /^(?:class\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:style\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:accTitle\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*\\{\\s*)/, /^(?:[\\}])/, /^(?:[^\\}]*)/, /^(?:end\\b\\s*)/, /^(?:\\(\\(\\()/, /^(?:\\)\\)\\))/, /^(?:[\\)]\\))/, /^(?:\\}\\})/, /^(?:\\})/, /^(?:\\(-)/, /^(?:-\\))/, /^(?:\\(\\()/, /^(?:\\]\\])/, /^(?:\\()/, /^(?:\\]\\))/, /^(?:\\\\\\])/, /^(?:\\/\\])/, /^(?:\\)\\])/, /^(?:[\\)])/, /^(?:\\]>)/, /^(?:[\\]])/, /^(?:-\\))/, /^(?:\\(-)/, /^(?:\\)\\))/, /^(?:\\))/, /^(?:\\(\\(\\()/, /^(?:\\(\\()/, /^(?:\\{\\{)/, /^(?:\\{)/, /^(?:>)/, /^(?:\\(\\[)/, /^(?:\\()/, /^(?:\\[\\[)/, /^(?:\\[\\|)/, /^(?:\\[\\()/, /^(?:\\)\\)\\))/, /^(?:\\[\\\\)/, /^(?:\\[\\/)/, /^(?:\\[\\\\)/, /^(?:\\[)/, /^(?:<\\[)/, /^(?:[^\\(\\[\\n\\-\\)\\{\\}\\s\\<\\>:]+)/, /^(?:$)/, /^(?:[\"][`])/, /^(?:[\"][`])/, /^(?:[^`\"]+)/, /^(?:[`][\"])/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]+)/, /^(?:[\"])/, /^(?:\\]>\\s*\\()/, /^(?:,?\\s*right\\s*)/, /^(?:,?\\s*left\\s*)/, /^(?:,?\\s*x\\s*)/, /^(?:,?\\s*y\\s*)/, /^(?:,?\\s*up\\s*)/, /^(?:,?\\s*down\\s*)/, /^(?:\\)\\s*)/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?:\\s*~~[\\~]+\\s*)/, /^(?:\\s*[xo<]?--\\s*)/, /^(?:\\s*[xo<]?==\\s*)/, /^(?:\\s*[xo<]?-\\.\\s*)/, /^(?:[\"][`])/, /^(?:[\"])/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?::\\d+)/],\n      conditions: { \"STYLE_DEFINITION\": { \"rules\": [29], \"inclusive\": false }, \"STYLE_STMNT\": { \"rules\": [28], \"inclusive\": false }, \"CLASSDEFID\": { \"rules\": [23], \"inclusive\": false }, \"CLASSDEF\": { \"rules\": [21, 22], \"inclusive\": false }, \"CLASS_STYLE\": { \"rules\": [26], \"inclusive\": false }, \"CLASS\": { \"rules\": [25], \"inclusive\": false }, \"LLABEL\": { \"rules\": [100, 101, 102, 103, 104], \"inclusive\": false }, \"ARROW_DIR\": { \"rules\": [86, 87, 88, 89, 90, 91, 92], \"inclusive\": false }, \"BLOCK_ARROW\": { \"rules\": [77, 82, 85], \"inclusive\": false }, \"NODE\": { \"rules\": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 81], \"inclusive\": false }, \"md_string\": { \"rules\": [10, 11, 79, 80], \"inclusive\": false }, \"space\": { \"rules\": [], \"inclusive\": false }, \"string\": { \"rules\": [13, 14, 83, 84], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [35, 36], \"inclusive\": false }, \"acc_descr\": { \"rules\": [33], \"inclusive\": false }, \"acc_title\": { \"rules\": [31], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 24, 27, 30, 32, 34, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 93, 94, 95, 96, 97, 98, 99, 105], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet blockDatabase = {};\nlet edgeList = [];\nlet edgeCount = {};\nconst COLOR_KEYWORD = \"color\";\nconst FILL_KEYWORD = \"fill\";\nconst BG_FILL = \"bgFill\";\nconst STYLECLASS_SEP = \",\";\nconst config = getConfig();\nlet classes = {};\nconst sanitizeText = (txt) => common.sanitizeText(txt, config);\nconst addStyleClass = function(id, styleAttributes = \"\") {\n  if (classes[id] === void 0) {\n    classes[id] = { id, styles: [], textStyles: [] };\n  }\n  const foundClass = classes[id];\n  if (styleAttributes !== void 0 && styleAttributes !== null) {\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n      const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\n      if (attrib.match(COLOR_KEYWORD)) {\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n        foundClass.textStyles.push(newStyle2);\n      }\n      foundClass.styles.push(fixedAttrib);\n    });\n  }\n};\nconst addStyle2Node = function(id, styles = \"\") {\n  const foundBlock = blockDatabase[id];\n  if (styles !== void 0 && styles !== null) {\n    foundBlock.styles = styles.split(STYLECLASS_SEP);\n  }\n};\nconst setCssClass = function(itemIds, cssClassName) {\n  itemIds.split(\",\").forEach(function(id) {\n    let foundBlock = blockDatabase[id];\n    if (foundBlock === void 0) {\n      const trimmedId = id.trim();\n      blockDatabase[trimmedId] = { id: trimmedId, type: \"na\", children: [] };\n      foundBlock = blockDatabase[trimmedId];\n    }\n    if (!foundBlock.classes) {\n      foundBlock.classes = [];\n    }\n    foundBlock.classes.push(cssClassName);\n  });\n};\nconst populateBlockDatabase = (_blockList, parent) => {\n  const blockList = _blockList.flat();\n  const children = [];\n  for (const block of blockList) {\n    if (block.label) {\n      block.label = sanitizeText(block.label);\n    }\n    if (block.type === \"classDef\") {\n      addStyleClass(block.id, block.css);\n      continue;\n    }\n    if (block.type === \"applyClass\") {\n      setCssClass(block.id, (block == null ? void 0 : block.styleClass) || \"\");\n      continue;\n    }\n    if (block.type === \"applyStyles\") {\n      if (block == null ? void 0 : block.stylesStr) {\n        addStyle2Node(block.id, block == null ? void 0 : block.stylesStr);\n      }\n      continue;\n    }\n    if (block.type === \"column-setting\") {\n      parent.columns = block.columns || -1;\n    } else if (block.type === \"edge\") {\n      if (edgeCount[block.id]) {\n        edgeCount[block.id]++;\n      } else {\n        edgeCount[block.id] = 1;\n      }\n      block.id = edgeCount[block.id] + \"-\" + block.id;\n      edgeList.push(block);\n    } else {\n      if (!block.label) {\n        if (block.type === \"composite\") {\n          block.label = \"\";\n        } else {\n          block.label = block.id;\n        }\n      }\n      const newBlock = !blockDatabase[block.id];\n      if (newBlock) {\n        blockDatabase[block.id] = block;\n      } else {\n        if (block.type !== \"na\") {\n          blockDatabase[block.id].type = block.type;\n        }\n        if (block.label !== block.id) {\n          blockDatabase[block.id].label = block.label;\n        }\n      }\n      if (block.children) {\n        populateBlockDatabase(block.children, block);\n      }\n      if (block.type === \"space\") {\n        const w = block.width || 1;\n        for (let j = 0; j < w; j++) {\n          const newBlock2 = clone(block);\n          newBlock2.id = newBlock2.id + \"-\" + j;\n          blockDatabase[newBlock2.id] = newBlock2;\n          children.push(newBlock2);\n        }\n      } else if (newBlock) {\n        children.push(block);\n      }\n    }\n  }\n  parent.children = children;\n};\nlet blocks = [];\nlet rootBlock = { id: \"root\", type: \"composite\", children: [], columns: -1 };\nconst clear = () => {\n  log.debug(\"Clear called\");\n  clear$1();\n  rootBlock = { id: \"root\", type: \"composite\", children: [], columns: -1 };\n  blockDatabase = { root: rootBlock };\n  blocks = [];\n  classes = {};\n  edgeList = [];\n  edgeCount = {};\n};\nfunction typeStr2Type(typeStr) {\n  log.debug(\"typeStr2Type\", typeStr);\n  switch (typeStr) {\n    case \"[]\":\n      return \"square\";\n    case \"()\":\n      log.debug(\"we have a round\");\n      return \"round\";\n    case \"(())\":\n      return \"circle\";\n    case \">]\":\n      return \"rect_left_inv_arrow\";\n    case \"{}\":\n      return \"diamond\";\n    case \"{{}}\":\n      return \"hexagon\";\n    case \"([])\":\n      return \"stadium\";\n    case \"[[]]\":\n      return \"subroutine\";\n    case \"[()]\":\n      return \"cylinder\";\n    case \"((()))\":\n      return \"doublecircle\";\n    case \"[//]\":\n      return \"lean_right\";\n    case \"[\\\\\\\\]\":\n      return \"lean_left\";\n    case \"[/\\\\]\":\n      return \"trapezoid\";\n    case \"[\\\\/]\":\n      return \"inv_trapezoid\";\n    case \"<[]>\":\n      return \"block_arrow\";\n    default:\n      return \"na\";\n  }\n}\nfunction edgeTypeStr2Type(typeStr) {\n  log.debug(\"typeStr2Type\", typeStr);\n  switch (typeStr) {\n    case \"==\":\n      return \"thick\";\n    default:\n      return \"normal\";\n  }\n}\nfunction edgeStrToEdgeData(typeStr) {\n  switch (typeStr.trim()) {\n    case \"--x\":\n      return \"arrow_cross\";\n    case \"--o\":\n      return \"arrow_circle\";\n    default:\n      return \"arrow_point\";\n  }\n}\nlet cnt = 0;\nconst generateId = () => {\n  cnt++;\n  return \"id-\" + Math.random().toString(36).substr(2, 12) + \"-\" + cnt;\n};\nconst setHierarchy = (block) => {\n  rootBlock.children = block;\n  populateBlockDatabase(block, rootBlock);\n  blocks = rootBlock.children;\n};\nconst getColumns = (blockId) => {\n  const block = blockDatabase[blockId];\n  if (!block) {\n    return -1;\n  }\n  if (block.columns) {\n    return block.columns;\n  }\n  if (!block.children) {\n    return -1;\n  }\n  return block.children.length;\n};\nconst getBlocksFlat = () => {\n  return [...Object.values(blockDatabase)];\n};\nconst getBlocks = () => {\n  return blocks || [];\n};\nconst getEdges = () => {\n  return edgeList;\n};\nconst getBlock = (id) => {\n  return blockDatabase[id];\n};\nconst setBlock = (block) => {\n  blockDatabase[block.id] = block;\n};\nconst getLogger = () => console;\nconst getClasses$1 = function() {\n  return classes;\n};\nconst db = {\n  getConfig: () => getConfig$1().block,\n  typeStr2Type,\n  edgeTypeStr2Type,\n  edgeStrToEdgeData,\n  getLogger,\n  getBlocksFlat,\n  getBlocks,\n  getEdges,\n  setHierarchy,\n  getBlock,\n  setBlock,\n  getColumns,\n  getClasses: getClasses$1,\n  clear,\n  generateId\n};\nconst db$1 = db;\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color:\n  }\n\n  .node .cluster {\n    // fill: ${fade(options.mainBkg, 0.5)};\n    fill: ${fade(options.clusterBkg, 0.5)};\n    stroke: ${fade(options.clusterBorder, 0.2)};\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nfunction getNodeFromBlock(block, db2, positioned = false) {\n  var _a2, _b2, _c;\n  const vertex = block;\n  let classStr = \"default\";\n  if ((((_a2 = vertex == null ? void 0 : vertex.classes) == null ? void 0 : _a2.length) || 0) > 0) {\n    classStr = ((vertex == null ? void 0 : vertex.classes) || []).join(\" \");\n  }\n  classStr = classStr + \" flowchart-label\";\n  let radius = 0;\n  let shape = \"\";\n  let padding2;\n  switch (vertex.type) {\n    case \"round\":\n      radius = 5;\n      shape = \"rect\";\n      break;\n    case \"composite\":\n      radius = 0;\n      shape = \"composite\";\n      padding2 = 0;\n      break;\n    case \"square\":\n      shape = \"rect\";\n      break;\n    case \"diamond\":\n      shape = \"question\";\n      break;\n    case \"hexagon\":\n      shape = \"hexagon\";\n      break;\n    case \"block_arrow\":\n      shape = \"block_arrow\";\n      break;\n    case \"odd\":\n      shape = \"rect_left_inv_arrow\";\n      break;\n    case \"lean_right\":\n      shape = \"lean_right\";\n      break;\n    case \"lean_left\":\n      shape = \"lean_left\";\n      break;\n    case \"trapezoid\":\n      shape = \"trapezoid\";\n      break;\n    case \"inv_trapezoid\":\n      shape = \"inv_trapezoid\";\n      break;\n    case \"rect_left_inv_arrow\":\n      shape = \"rect_left_inv_arrow\";\n      break;\n    case \"circle\":\n      shape = \"circle\";\n      break;\n    case \"ellipse\":\n      shape = \"ellipse\";\n      break;\n    case \"stadium\":\n      shape = \"stadium\";\n      break;\n    case \"subroutine\":\n      shape = \"subroutine\";\n      break;\n    case \"cylinder\":\n      shape = \"cylinder\";\n      break;\n    case \"group\":\n      shape = \"rect\";\n      break;\n    case \"doublecircle\":\n      shape = \"doublecircle\";\n      break;\n    default:\n      shape = \"rect\";\n  }\n  const styles = getStylesFromArray((vertex == null ? void 0 : vertex.styles) || []);\n  const vertexText = vertex.label;\n  const bounds = vertex.size || { width: 0, height: 0, x: 0, y: 0 };\n  const node = {\n    labelStyle: styles.labelStyle,\n    shape,\n    labelText: vertexText,\n    rx: radius,\n    ry: radius,\n    class: classStr,\n    style: styles.style,\n    id: vertex.id,\n    directions: vertex.directions,\n    width: bounds.width,\n    height: bounds.height,\n    x: bounds.x,\n    y: bounds.y,\n    positioned,\n    intersect: void 0,\n    type: vertex.type,\n    padding: padding2 ?? (((_c = (_b2 = getConfig$1()) == null ? void 0 : _b2.block) == null ? void 0 : _c.padding) || 0)\n  };\n  return node;\n}\nasync function calculateBlockSize(elem, block, db2) {\n  const node = getNodeFromBlock(block, db2, false);\n  if (node.type === \"group\") {\n    return;\n  }\n  const nodeEl = await insertNode(elem, node);\n  const boundingBox = nodeEl.node().getBBox();\n  const obj = db2.getBlock(node.id);\n  obj.size = { width: boundingBox.width, height: boundingBox.height, x: 0, y: 0, node: nodeEl };\n  db2.setBlock(obj);\n  nodeEl.remove();\n}\nasync function insertBlockPositioned(elem, block, db2) {\n  const node = getNodeFromBlock(block, db2, true);\n  const obj = db2.getBlock(node.id);\n  if (obj.type !== \"space\") {\n    await insertNode(elem, node);\n    block.intersect = node == null ? void 0 : node.intersect;\n    positionNode(node);\n  }\n}\nasync function performOperations(elem, blocks2, db2, operation) {\n  for (const block of blocks2) {\n    await operation(elem, block, db2);\n    if (block.children) {\n      await performOperations(elem, block.children, db2, operation);\n    }\n  }\n}\nasync function calculateBlockSizes(elem, blocks2, db2) {\n  await performOperations(elem, blocks2, db2, calculateBlockSize);\n}\nasync function insertBlocks(elem, blocks2, db2) {\n  await performOperations(elem, blocks2, db2, insertBlockPositioned);\n}\nasync function insertEdges(elem, edges, blocks2, db2, id) {\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  });\n  g.setGraph({\n    rankdir: \"TB\",\n    nodesep: 10,\n    ranksep: 10,\n    marginx: 8,\n    marginy: 8\n  });\n  for (const block of blocks2) {\n    if (block.size) {\n      g.setNode(block.id, {\n        width: block.size.width,\n        height: block.size.height,\n        intersect: block.intersect\n      });\n    }\n  }\n  for (const edge of edges) {\n    if (edge.start && edge.end) {\n      const startBlock = db2.getBlock(edge.start);\n      const endBlock = db2.getBlock(edge.end);\n      if ((startBlock == null ? void 0 : startBlock.size) && (endBlock == null ? void 0 : endBlock.size)) {\n        const start = startBlock.size;\n        const end = endBlock.size;\n        const points = [\n          { x: start.x, y: start.y },\n          { x: start.x + (end.x - start.x) / 2, y: start.y + (end.y - start.y) / 2 },\n          { x: end.x, y: end.y }\n        ];\n        await insertEdge(\n          elem,\n          { v: edge.start, w: edge.end, name: edge.id },\n          {\n            ...edge,\n            arrowTypeEnd: edge.arrowTypeEnd,\n            arrowTypeStart: edge.arrowTypeStart,\n            points,\n            classes: \"edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1\"\n          },\n          void 0,\n          \"block\",\n          g,\n          id\n        );\n        if (edge.label) {\n          await insertEdgeLabel(elem, {\n            ...edge,\n            label: edge.label,\n            labelStyle: \"stroke: #333; stroke-width: 1.5px;fill:none;\",\n            arrowTypeEnd: edge.arrowTypeEnd,\n            arrowTypeStart: edge.arrowTypeStart,\n            points,\n            classes: \"edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1\"\n          });\n          await positionEdgeLabel(\n            { ...edge, x: points[1].x, y: points[1].y },\n            {\n              originalPath: points\n            }\n          );\n        }\n      }\n    }\n  }\n}\nconst padding = ((_b = (_a = getConfig()) == null ? void 0 : _a.block) == null ? void 0 : _b.padding) || 8;\nfunction calculateBlockPosition(columns, position) {\n  if (columns === 0 || !Number.isInteger(columns)) {\n    throw new Error(\"Columns must be an integer !== 0.\");\n  }\n  if (position < 0 || !Number.isInteger(position)) {\n    throw new Error(\"Position must be a non-negative integer.\" + position);\n  }\n  if (columns < 0) {\n    return { px: position, py: 0 };\n  }\n  if (columns === 1) {\n    return { px: 0, py: position };\n  }\n  const px = position % columns;\n  const py = Math.floor(position / columns);\n  return { px, py };\n}\nconst getMaxChildSize = (block) => {\n  let maxWidth = 0;\n  let maxHeight = 0;\n  for (const child of block.children) {\n    const { width, height, x, y } = child.size || { width: 0, height: 0, x: 0, y: 0 };\n    log.debug(\n      \"getMaxChildSize abc95 child:\",\n      child.id,\n      \"width:\",\n      width,\n      \"height:\",\n      height,\n      \"x:\",\n      x,\n      \"y:\",\n      y,\n      child.type\n    );\n    if (child.type === \"space\") {\n      continue;\n    }\n    if (width > maxWidth) {\n      maxWidth = width / (block.widthInColumns || 1);\n    }\n    if (height > maxHeight) {\n      maxHeight = height;\n    }\n  }\n  return { width: maxWidth, height: maxHeight };\n};\nfunction setBlockSizes(block, db2, siblingWidth = 0, siblingHeight = 0) {\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k;\n  log.debug(\n    \"setBlockSizes abc95 (start)\",\n    block.id,\n    (_a2 = block == null ? void 0 : block.size) == null ? void 0 : _a2.x,\n    \"block width =\",\n    block == null ? void 0 : block.size,\n    \"sieblingWidth\",\n    siblingWidth\n  );\n  if (!((_b2 = block == null ? void 0 : block.size) == null ? void 0 : _b2.width)) {\n    block.size = {\n      width: siblingWidth,\n      height: siblingHeight,\n      x: 0,\n      y: 0\n    };\n  }\n  let maxWidth = 0;\n  let maxHeight = 0;\n  if (((_c = block.children) == null ? void 0 : _c.length) > 0) {\n    for (const child of block.children) {\n      setBlockSizes(child, db2);\n    }\n    const childSize = getMaxChildSize(block);\n    maxWidth = childSize.width;\n    maxHeight = childSize.height;\n    log.debug(\"setBlockSizes abc95 maxWidth of\", block.id, \":s children is \", maxWidth, maxHeight);\n    for (const child of block.children) {\n      if (child.size) {\n        log.debug(\n          `abc95 Setting size of children of ${block.id} id=${child.id} ${maxWidth} ${maxHeight} ${child.size}`\n        );\n        child.size.width = maxWidth * (child.widthInColumns || 1) + padding * ((child.widthInColumns || 1) - 1);\n        child.size.height = maxHeight;\n        child.size.x = 0;\n        child.size.y = 0;\n        log.debug(\n          `abc95 updating size of ${block.id} children child:${child.id} maxWidth:${maxWidth} maxHeight:${maxHeight}`\n        );\n      }\n    }\n    for (const child of block.children) {\n      setBlockSizes(child, db2, maxWidth, maxHeight);\n    }\n    const columns = block.columns || -1;\n    let numItems = 0;\n    for (const child of block.children) {\n      numItems += child.widthInColumns || 1;\n    }\n    let xSize = block.children.length;\n    if (columns > 0 && columns < numItems) {\n      xSize = columns;\n    }\n    block.widthInColumns || 1;\n    const ySize = Math.ceil(numItems / xSize);\n    let width = xSize * (maxWidth + padding) + padding;\n    let height = ySize * (maxHeight + padding) + padding;\n    if (width < siblingWidth) {\n      log.debug(\n        `Detected to small siebling: abc95 ${block.id} sieblingWidth ${siblingWidth} sieblingHeight ${siblingHeight} width ${width}`\n      );\n      width = siblingWidth;\n      height = siblingHeight;\n      const childWidth = (siblingWidth - xSize * padding - padding) / xSize;\n      const childHeight = (siblingHeight - ySize * padding - padding) / ySize;\n      log.debug(\"Size indata abc88\", block.id, \"childWidth\", childWidth, \"maxWidth\", maxWidth);\n      log.debug(\"Size indata abc88\", block.id, \"childHeight\", childHeight, \"maxHeight\", maxHeight);\n      log.debug(\"Size indata abc88 xSize\", xSize, \"padding\", padding);\n      for (const child of block.children) {\n        if (child.size) {\n          child.size.width = childWidth;\n          child.size.height = childHeight;\n          child.size.x = 0;\n          child.size.y = 0;\n        }\n      }\n    }\n    log.debug(\n      `abc95 (finale calc) ${block.id} xSize ${xSize} ySize ${ySize} columns ${columns}${block.children.length} width=${Math.max(width, ((_d = block.size) == null ? void 0 : _d.width) || 0)}`\n    );\n    if (width < (((_e = block == null ? void 0 : block.size) == null ? void 0 : _e.width) || 0)) {\n      width = ((_f = block == null ? void 0 : block.size) == null ? void 0 : _f.width) || 0;\n      const num = columns > 0 ? Math.min(block.children.length, columns) : block.children.length;\n      if (num > 0) {\n        const childWidth = (width - num * padding - padding) / num;\n        log.debug(\"abc95 (growing to fit) width\", block.id, width, (_g = block.size) == null ? void 0 : _g.width, childWidth);\n        for (const child of block.children) {\n          if (child.size) {\n            child.size.width = childWidth;\n          }\n        }\n      }\n    }\n    block.size = {\n      width,\n      height,\n      x: 0,\n      y: 0\n    };\n  }\n  log.debug(\n    \"setBlockSizes abc94 (done)\",\n    block.id,\n    (_h = block == null ? void 0 : block.size) == null ? void 0 : _h.x,\n    (_i = block == null ? void 0 : block.size) == null ? void 0 : _i.width,\n    (_j = block == null ? void 0 : block.size) == null ? void 0 : _j.y,\n    (_k = block == null ? void 0 : block.size) == null ? void 0 : _k.height\n  );\n}\nfunction layoutBlocks(block, db2) {\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q;\n  log.debug(\n    `abc85 layout blocks (=>layoutBlocks) ${block.id} x: ${(_a2 = block == null ? void 0 : block.size) == null ? void 0 : _a2.x} y: ${(_b2 = block == null ? void 0 : block.size) == null ? void 0 : _b2.y} width: ${(_c = block == null ? void 0 : block.size) == null ? void 0 : _c.width}`\n  );\n  const columns = block.columns || -1;\n  log.debug(\"layoutBlocks columns abc95\", block.id, \"=>\", columns, block);\n  if (block.children && // find max width of children\n  block.children.length > 0) {\n    const width = ((_e = (_d = block == null ? void 0 : block.children[0]) == null ? void 0 : _d.size) == null ? void 0 : _e.width) || 0;\n    const widthOfChildren = block.children.length * width + (block.children.length - 1) * padding;\n    log.debug(\"widthOfChildren 88\", widthOfChildren, \"posX\");\n    let columnPos = 0;\n    log.debug(\"abc91 block?.size?.x\", block.id, (_f = block == null ? void 0 : block.size) == null ? void 0 : _f.x);\n    let startingPosX = ((_g = block == null ? void 0 : block.size) == null ? void 0 : _g.x) ? ((_h = block == null ? void 0 : block.size) == null ? void 0 : _h.x) + (-((_i = block == null ? void 0 : block.size) == null ? void 0 : _i.width) / 2 || 0) : -padding;\n    let rowPos = 0;\n    for (const child of block.children) {\n      const parent = block;\n      if (!child.size) {\n        continue;\n      }\n      const { width: width2, height } = child.size;\n      const { px, py } = calculateBlockPosition(columns, columnPos);\n      if (py != rowPos) {\n        rowPos = py;\n        startingPosX = ((_j = block == null ? void 0 : block.size) == null ? void 0 : _j.x) ? ((_k = block == null ? void 0 : block.size) == null ? void 0 : _k.x) + (-((_l = block == null ? void 0 : block.size) == null ? void 0 : _l.width) / 2 || 0) : -padding;\n        log.debug(\"New row in layout for block\", block.id, \" and child \", child.id, rowPos);\n      }\n      log.debug(\n        `abc89 layout blocks (child) id: ${child.id} Pos: ${columnPos} (px, py) ${px},${py} (${(_m = parent == null ? void 0 : parent.size) == null ? void 0 : _m.x},${(_n = parent == null ? void 0 : parent.size) == null ? void 0 : _n.y}) parent: ${parent.id} width: ${width2}${padding}`\n      );\n      if (parent.size) {\n        const halfWidth = width2 / 2;\n        child.size.x = startingPosX + padding + halfWidth;\n        log.debug(\n          `abc91 layout blocks (calc) px, pyid:${child.id} startingPos=X${startingPosX} new startingPosX${child.size.x} ${halfWidth} padding=${padding} width=${width2} halfWidth=${halfWidth} => x:${child.size.x} y:${child.size.y} ${child.widthInColumns} (width * (child?.w || 1)) / 2 ${width2 * ((child == null ? void 0 : child.widthInColumns) || 1) / 2}`\n        );\n        startingPosX = child.size.x + halfWidth;\n        child.size.y = parent.size.y - parent.size.height / 2 + py * (height + padding) + height / 2 + padding;\n        log.debug(\n          `abc88 layout blocks (calc) px, pyid:${child.id}startingPosX${startingPosX}${padding}${halfWidth}=>x:${child.size.x}y:${child.size.y}${child.widthInColumns}(width * (child?.w || 1)) / 2${width2 * ((child == null ? void 0 : child.widthInColumns) || 1) / 2}`\n        );\n      }\n      if (child.children) {\n        layoutBlocks(child);\n      }\n      columnPos += (child == null ? void 0 : child.widthInColumns) || 1;\n      log.debug(\"abc88 columnsPos\", child, columnPos);\n    }\n  }\n  log.debug(\n    `layout blocks (<==layoutBlocks) ${block.id} x: ${(_o = block == null ? void 0 : block.size) == null ? void 0 : _o.x} y: ${(_p = block == null ? void 0 : block.size) == null ? void 0 : _p.y} width: ${(_q = block == null ? void 0 : block.size) == null ? void 0 : _q.width}`\n  );\n}\nfunction findBounds(block, { minX, minY, maxX, maxY } = { minX: 0, minY: 0, maxX: 0, maxY: 0 }) {\n  if (block.size && block.id !== \"root\") {\n    const { x, y, width, height } = block.size;\n    if (x - width / 2 < minX) {\n      minX = x - width / 2;\n    }\n    if (y - height / 2 < minY) {\n      minY = y - height / 2;\n    }\n    if (x + width / 2 > maxX) {\n      maxX = x + width / 2;\n    }\n    if (y + height / 2 > maxY) {\n      maxY = y + height / 2;\n    }\n  }\n  if (block.children) {\n    for (const child of block.children) {\n      ({ minX, minY, maxX, maxY } = findBounds(child, { minX, minY, maxX, maxY }));\n    }\n  }\n  return { minX, minY, maxX, maxY };\n}\nfunction layout(db2) {\n  const root = db2.getBlock(\"root\");\n  if (!root) {\n    return;\n  }\n  setBlockSizes(root, db2, 0, 0);\n  layoutBlocks(root);\n  log.debug(\"getBlocks\", JSON.stringify(root, null, 2));\n  const { minX, minY, maxX, maxY } = findBounds(root);\n  const height = maxY - minY;\n  const width = maxX - minX;\n  return { x: minX, y: minY, width, height };\n}\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  const { securityLevel, block: conf } = getConfig$1();\n  const db2 = diagObj.db;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n  const markers = [\"point\", \"circle\", \"cross\"];\n  insertMarkers(svg, markers, diagObj.type, id);\n  const bl = db2.getBlocks();\n  const blArr = db2.getBlocksFlat();\n  const edges = db2.getEdges();\n  const nodes = svg.insert(\"g\").attr(\"class\", \"block\");\n  await calculateBlockSizes(nodes, bl, db2);\n  const bounds = layout(db2);\n  await insertBlocks(nodes, bl, db2);\n  await insertEdges(nodes, edges, blArr, db2, id);\n  if (bounds) {\n    const bounds2 = bounds;\n    const magicFactor = Math.max(1, Math.round(0.125 * (bounds2.width / bounds2.height)));\n    const height = bounds2.height + magicFactor + 10;\n    const width = bounds2.width + 10;\n    const { useMaxWidth } = conf;\n    configureSvgSize(svg, height, width, !!useMaxWidth);\n    log.debug(\"Here Bounds\", bounds, bounds2);\n    svg.attr(\n      \"viewBox\",\n      `${bounds2.x - 5} ${bounds2.y - 5} ${bounds2.width + 10} ${bounds2.height + 10}`\n    );\n  }\n  scaleOrdinal(schemeTableau10);\n};\nconst renderer = {\n  draw,\n  getClasses\n};\nconst diagram = {\n  parser: parser$1,\n  db: db$1,\n  renderer,\n  styles: flowStyles\n};\nexport {\n  diagram\n};\n"],"names":["_a","_b","parser","o","k","v","o2","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","parser2","yytext","yyleng","yylineno","yy","yystate","$$","_$","$0","num","spaceId","edgeData","id","str","hash","error","input","self","stack","tstack","vstack","lstack","table","TERROR","EOF","args","lexer2","sharedState","yyloc","ranges","lex","token","symbol","state","action","r","yyval","p","len","newState","expected","errStr","lexer","ch","lines","oldLines","n","past","next","pre","c","match","indexed_rule","backup","tempMatch","index","rules","i","condition","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","blockDatabase","edgeList","edgeCount","COLOR_KEYWORD","FILL_KEYWORD","BG_FILL","STYLECLASS_SEP","config","getConfig","classes","sanitizeText","txt","common","addStyleClass","styleAttributes","foundClass","attrib","fixedAttrib","newStyle2","addStyle2Node","styles","foundBlock","setCssClass","itemIds","cssClassName","trimmedId","populateBlockDatabase","_blockList","parent","blockList","children","block","newBlock","w","j","newBlock2","clone","blocks","rootBlock","clear","log","clear$1","typeStr2Type","typeStr","edgeTypeStr2Type","edgeStrToEdgeData","cnt","generateId","setHierarchy","getColumns","blockId","getBlocksFlat","getBlocks","getEdges","getBlock","setBlock","getLogger","getClasses$1","db","getConfig$1","db$1","fade","color","opacity","channel","khroma.channel","g","b","khroma.rgba","getStyles","options","flowStyles","getNodeFromBlock","db2","positioned","_a2","_b2","_c","vertex","classStr","radius","shape","padding2","getStylesFromArray","vertexText","bounds","calculateBlockSize","elem","node","nodeEl","insertNode","boundingBox","obj","insertBlockPositioned","positionNode","performOperations","blocks2","operation","calculateBlockSizes","insertBlocks","insertEdges","edges","graphlib.Graph","edge","startBlock","endBlock","start","end","points","insertEdge","insertEdgeLabel","positionEdgeLabel","padding","calculateBlockPosition","columns","position","px","py","getMaxChildSize","maxWidth","maxHeight","child","width","height","x","y","setBlockSizes","siblingWidth","siblingHeight","_d","_e","_f","_g","_h","_i","_j","_k","childSize","numItems","xSize","ySize","childWidth","childHeight","layoutBlocks","_l","_m","_n","_o","_p","_q","widthOfChildren","columnPos","startingPosX","rowPos","width2","halfWidth","findBounds","minX","minY","maxX","maxY","layout","root","getClasses","text","diagObj","draw","_version","securityLevel","conf","sandboxElement","select","svg","insertMarkers","bl","blArr","nodes","bounds2","magicFactor","useMaxWidth","configureSvgSize","scaleOrdinal","schemeTableau10","renderer","diagram"],"mappings":"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","x_google_ignoreList":[0]}