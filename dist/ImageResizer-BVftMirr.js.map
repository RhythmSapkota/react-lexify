{"version":3,"file":"ImageResizer-BVftMirr.js","sources":["../src/ui/ImageResizer.tsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type {LexicalEditor} from 'lexical';\nimport type {JSX} from 'react';\n\nimport {calculateZoomLevel} from '@lexical/utils';\nimport * as React from 'react';\nimport {useRef} from 'react';\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nconst Direction = {\n  east: 1 << 0,\n  north: 1 << 3,\n  south: 1 << 1,\n  west: 1 << 2,\n};\n\nexport default function ImageResizer({\n  onResizeStart,\n  onResizeEnd,\n  buttonRef,\n  imageRef,\n  maxWidth,\n  editor,\n  showCaption,\n  setShowCaption,\n  captionsEnabled,\n}: {\n  editor: LexicalEditor;\n  buttonRef: {current: null | HTMLButtonElement};\n  imageRef: {current: null | HTMLElement};\n  maxWidth?: number;\n  onResizeEnd: (width: 'inherit' | number, height: 'inherit' | number) => void;\n  onResizeStart: () => void;\n  setShowCaption: (show: boolean) => void;\n  showCaption: boolean;\n  captionsEnabled: boolean;\n}): JSX.Element {\n  const controlWrapperRef = useRef<HTMLDivElement>(null);\n  const userSelect = useRef({\n    priority: '',\n    value: 'default',\n  });\n  const positioningRef = useRef<{\n    currentHeight: 'inherit' | number;\n    currentWidth: 'inherit' | number;\n    direction: number;\n    isResizing: boolean;\n    ratio: number;\n    startHeight: number;\n    startWidth: number;\n    startX: number;\n    startY: number;\n  }>({\n    currentHeight: 0,\n    currentWidth: 0,\n    direction: 0,\n    isResizing: false,\n    ratio: 0,\n    startHeight: 0,\n    startWidth: 0,\n    startX: 0,\n    startY: 0,\n  });\n  const editorRootElement = editor.getRootElement();\n  // Find max width, accounting for editor padding.\n  const maxWidthContainer = maxWidth\n    ? maxWidth\n    : editorRootElement !== null\n    ? editorRootElement.getBoundingClientRect().width - 20\n    : 100;\n  const maxHeightContainer =\n    editorRootElement !== null\n      ? editorRootElement.getBoundingClientRect().height - 20\n      : 100;\n\n  const minWidth = 100;\n  const minHeight = 100;\n\n  const setStartCursor = (direction: number) => {\n    const ew = direction === Direction.east || direction === Direction.west;\n    const ns = direction === Direction.north || direction === Direction.south;\n    const nwse =\n      (direction & Direction.north && direction & Direction.west) ||\n      (direction & Direction.south && direction & Direction.east);\n\n    const cursorDir = ew ? 'ew' : ns ? 'ns' : nwse ? 'nwse' : 'nesw';\n\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty(\n        'cursor',\n        `${cursorDir}-resize`,\n        'important',\n      );\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty(\n        'cursor',\n        `${cursorDir}-resize`,\n        'important',\n      );\n      userSelect.current.value = document.body.style.getPropertyValue(\n        '-webkit-user-select',\n      );\n      userSelect.current.priority = document.body.style.getPropertyPriority(\n        '-webkit-user-select',\n      );\n      document.body.style.setProperty(\n        '-webkit-user-select',\n        `none`,\n        'important',\n      );\n    }\n  };\n\n  const setEndCursor = () => {\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty('cursor', 'text');\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty('cursor', 'default');\n      document.body.style.setProperty(\n        '-webkit-user-select',\n        userSelect.current.value,\n        userSelect.current.priority,\n      );\n    }\n  };\n\n  const handlePointerDown = (\n    event: React.PointerEvent<HTMLDivElement>,\n    direction: number,\n  ) => {\n    if (!editor.isEditable()) {\n      return;\n    }\n\n    const image = imageRef.current;\n    const controlWrapper = controlWrapperRef.current;\n\n    if (image !== null && controlWrapper !== null) {\n      event.preventDefault();\n      const {width, height} = image.getBoundingClientRect();\n      const zoom = calculateZoomLevel(image);\n      const positioning = positioningRef.current;\n      positioning.startWidth = width;\n      positioning.startHeight = height;\n      positioning.ratio = width / height;\n      positioning.currentWidth = width;\n      positioning.currentHeight = height;\n      positioning.startX = event.clientX / zoom;\n      positioning.startY = event.clientY / zoom;\n      positioning.isResizing = true;\n      positioning.direction = direction;\n\n      setStartCursor(direction);\n      onResizeStart();\n\n      controlWrapper.classList.add('image-control-wrapper--resizing');\n      image.style.height = `${height}px`;\n      image.style.width = `${width}px`;\n\n      document.addEventListener('pointermove', handlePointerMove);\n      document.addEventListener('pointerup', handlePointerUp);\n    }\n  };\n  const handlePointerMove = (event: PointerEvent) => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n\n    const isHorizontal =\n      positioning.direction & (Direction.east | Direction.west);\n    const isVertical =\n      positioning.direction & (Direction.south | Direction.north);\n\n    if (image !== null && positioning.isResizing) {\n      const zoom = calculateZoomLevel(image);\n      // Corner cursor\n      if (isHorizontal && isVertical) {\n        let diff = Math.floor(positioning.startX - event.clientX / zoom);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(\n          positioning.startWidth + diff,\n          minWidth,\n          maxWidthContainer,\n        );\n\n        const height = width / positioning.ratio;\n        image.style.width = `${width}px`;\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n        positioning.currentWidth = width;\n      } else if (isVertical) {\n        let diff = Math.floor(positioning.startY - event.clientY / zoom);\n        diff = positioning.direction & Direction.south ? -diff : diff;\n\n        const height = clamp(\n          positioning.startHeight + diff,\n          minHeight,\n          maxHeightContainer,\n        );\n\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n      } else {\n        let diff = Math.floor(positioning.startX - event.clientX / zoom);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(\n          positioning.startWidth + diff,\n          minWidth,\n          maxWidthContainer,\n        );\n\n        image.style.width = `${width}px`;\n        positioning.currentWidth = width;\n      }\n    }\n  };\n  const handlePointerUp = () => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n    const controlWrapper = controlWrapperRef.current;\n    if (image !== null && controlWrapper !== null && positioning.isResizing) {\n      const width = positioning.currentWidth;\n      const height = positioning.currentHeight;\n      positioning.startWidth = 0;\n      positioning.startHeight = 0;\n      positioning.ratio = 0;\n      positioning.startX = 0;\n      positioning.startY = 0;\n      positioning.currentWidth = 0;\n      positioning.currentHeight = 0;\n      positioning.isResizing = false;\n\n      controlWrapper.classList.remove('image-control-wrapper--resizing');\n\n      setEndCursor();\n      onResizeEnd(width, height);\n\n      document.removeEventListener('pointermove', handlePointerMove);\n      document.removeEventListener('pointerup', handlePointerUp);\n    }\n  };\n  return (\n    <div ref={controlWrapperRef}>\n      {!showCaption && captionsEnabled && (\n        <button\n          className=\"image-caption-button\"\n          ref={buttonRef}\n          onClick={() => {\n            setShowCaption(!showCaption);\n          }}>\n          Add Caption\n        </button>\n      )}\n      <div\n        className=\"image-resizer image-resizer-n\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-ne\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-e\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-se\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-s\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-sw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-w\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-nw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.west);\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["clamp","value","min","max","Direction","ImageResizer","onResizeStart","onResizeEnd","buttonRef","imageRef","maxWidth","editor","showCaption","setShowCaption","captionsEnabled","controlWrapperRef","useRef","userSelect","positioningRef","editorRootElement","maxWidthContainer","maxHeightContainer","minWidth","minHeight","setStartCursor","direction","ew","ns","nwse","cursorDir","setEndCursor","handlePointerDown","event","image","controlWrapper","width","height","zoom","calculateZoomLevel","positioning","handlePointerMove","handlePointerUp","isHorizontal","isVertical","diff","jsxs","jsx"],"mappings":"uEAeA,SAASA,EAAMC,EAAeC,EAAaC,EAAa,CACtD,OAAO,KAAK,IAAI,KAAK,IAAIF,EAAOC,CAAG,EAAGC,CAAG,CAC3C,CAEA,MAAMC,EAAY,CAChB,KAAM,EACN,MAAO,EACP,MAAO,EACP,KAAM,CACR,EAEA,SAAwBC,EAAa,CACnC,cAAAC,EACA,YAAAC,EACA,UAAAC,EACA,SAAAC,EACA,SAAAC,EACA,OAAAC,EACA,YAAAC,EACA,eAAAC,EACA,gBAAAC,CACF,EAUgB,CACR,MAAAC,EAAoBC,SAAuB,IAAI,EAC/CC,EAAaD,EAAAA,OAAO,CACxB,SAAU,GACV,MAAO,SAAA,CACR,EACKE,EAAiBF,EAAAA,OAUpB,CACD,cAAe,EACf,aAAc,EACd,UAAW,EACX,WAAY,GACZ,MAAO,EACP,YAAa,EACb,WAAY,EACZ,OAAQ,EACR,OAAQ,CAAA,CACT,EACKG,EAAoBR,EAAO,eAAe,EAE1CS,EAAoBV,IAEtBS,IAAsB,KACtBA,EAAkB,sBAAwB,EAAA,MAAQ,GAClD,KACEE,EACJF,IAAsB,KAClBA,EAAkB,wBAAwB,OAAS,GACnD,IAEAG,EAAW,IACXC,EAAY,IAEZC,EAAkBC,GAAsB,CAC5C,MAAMC,EAAKD,IAAcrB,EAAU,MAAQqB,IAAcrB,EAAU,KAC7DuB,EAAKF,IAAcrB,EAAU,OAASqB,IAAcrB,EAAU,MAC9DwB,EACHH,EAAYrB,EAAU,OAASqB,EAAYrB,EAAU,MACrDqB,EAAYrB,EAAU,OAASqB,EAAYrB,EAAU,KAElDyB,EAAYH,EAAK,KAAOC,EAAK,KAAOC,EAAO,OAAS,OAEtDT,IAAsB,MACxBA,EAAkB,MAAM,YACtB,SACA,GAAGU,CAAS,UACZ,WACF,EAEE,SAAS,OAAS,OACpB,SAAS,KAAK,MAAM,YAClB,SACA,GAAGA,CAAS,UACZ,WACF,EACAZ,EAAW,QAAQ,MAAQ,SAAS,KAAK,MAAM,iBAC7C,qBACF,EACAA,EAAW,QAAQ,SAAW,SAAS,KAAK,MAAM,oBAChD,qBACF,EACA,SAAS,KAAK,MAAM,YAClB,sBACA,OACA,WACF,EAEJ,EAEMa,EAAe,IAAM,CACrBX,IAAsB,MACNA,EAAA,MAAM,YAAY,SAAU,MAAM,EAElD,SAAS,OAAS,OACpB,SAAS,KAAK,MAAM,YAAY,SAAU,SAAS,EACnD,SAAS,KAAK,MAAM,YAClB,sBACAF,EAAW,QAAQ,MACnBA,EAAW,QAAQ,QACrB,EAEJ,EAEMc,EAAoB,CACxBC,EACAP,IACG,CACC,GAAA,CAACd,EAAO,aACV,OAGF,MAAMsB,EAAQxB,EAAS,QACjByB,EAAiBnB,EAAkB,QAErC,GAAAkB,IAAU,MAAQC,IAAmB,KAAM,CAC7CF,EAAM,eAAe,EACrB,KAAM,CAAC,MAAAG,EAAO,OAAAC,GAAUH,EAAM,sBAAsB,EAC9CI,EAAOC,KAAmBL,CAAK,EAC/BM,EAAcrB,EAAe,QACnCqB,EAAY,WAAaJ,EACzBI,EAAY,YAAcH,EAC1BG,EAAY,MAAQJ,EAAQC,EAC5BG,EAAY,aAAeJ,EAC3BI,EAAY,cAAgBH,EAChBG,EAAA,OAASP,EAAM,QAAUK,EACzBE,EAAA,OAASP,EAAM,QAAUK,EACrCE,EAAY,WAAa,GACzBA,EAAY,UAAYd,EAExBD,EAAeC,CAAS,EACVnB,EAAA,EAEC4B,EAAA,UAAU,IAAI,iCAAiC,EACxDD,EAAA,MAAM,OAAS,GAAGG,CAAM,KACxBH,EAAA,MAAM,MAAQ,GAAGE,CAAK,KAEnB,SAAA,iBAAiB,cAAeK,CAAiB,EACjD,SAAA,iBAAiB,YAAaC,CAAe,CAAA,CAE1D,EACMD,EAAqBR,GAAwB,CACjD,MAAMC,EAAQxB,EAAS,QACjB8B,EAAcrB,EAAe,QAE7BwB,EACJH,EAAY,WAAanC,EAAU,KAAOA,EAAU,MAChDuC,EACJJ,EAAY,WAAanC,EAAU,MAAQA,EAAU,OAEnD,GAAA6B,IAAU,MAAQM,EAAY,WAAY,CACtC,MAAAF,EAAOC,KAAmBL,CAAK,EAErC,GAAIS,GAAgBC,EAAY,CAC9B,IAAIC,EAAO,KAAK,MAAML,EAAY,OAASP,EAAM,QAAUK,CAAI,EAC/DO,EAAOL,EAAY,UAAYnC,EAAU,KAAO,CAACwC,EAAOA,EAExD,MAAMT,EAAQnC,EACZuC,EAAY,WAAaK,EACzBtB,EACAF,CACF,EAEMgB,EAASD,EAAQI,EAAY,MAC7BN,EAAA,MAAM,MAAQ,GAAGE,CAAK,KACtBF,EAAA,MAAM,OAAS,GAAGG,CAAM,KAC9BG,EAAY,cAAgBH,EAC5BG,EAAY,aAAeJ,UAClBQ,EAAY,CACrB,IAAIC,EAAO,KAAK,MAAML,EAAY,OAASP,EAAM,QAAUK,CAAI,EAC/DO,EAAOL,EAAY,UAAYnC,EAAU,MAAQ,CAACwC,EAAOA,EAEzD,MAAMR,EAASpC,EACbuC,EAAY,YAAcK,EAC1BrB,EACAF,CACF,EAEMY,EAAA,MAAM,OAAS,GAAGG,CAAM,KAC9BG,EAAY,cAAgBH,CAAA,KACvB,CACL,IAAIQ,EAAO,KAAK,MAAML,EAAY,OAASP,EAAM,QAAUK,CAAI,EAC/DO,EAAOL,EAAY,UAAYnC,EAAU,KAAO,CAACwC,EAAOA,EAExD,MAAMT,EAAQnC,EACZuC,EAAY,WAAaK,EACzBtB,EACAF,CACF,EAEMa,EAAA,MAAM,MAAQ,GAAGE,CAAK,KAC5BI,EAAY,aAAeJ,CAAA,CAC7B,CAEJ,EACMM,EAAkB,IAAM,CAC5B,MAAMR,EAAQxB,EAAS,QACjB8B,EAAcrB,EAAe,QAC7BgB,EAAiBnB,EAAkB,QACzC,GAAIkB,IAAU,MAAQC,IAAmB,MAAQK,EAAY,WAAY,CACvE,MAAMJ,EAAQI,EAAY,aACpBH,EAASG,EAAY,cAC3BA,EAAY,WAAa,EACzBA,EAAY,YAAc,EAC1BA,EAAY,MAAQ,EACpBA,EAAY,OAAS,EACrBA,EAAY,OAAS,EACrBA,EAAY,aAAe,EAC3BA,EAAY,cAAgB,EAC5BA,EAAY,WAAa,GAEVL,EAAA,UAAU,OAAO,iCAAiC,EAEpDJ,EAAA,EACbvB,EAAY4B,EAAOC,CAAM,EAEhB,SAAA,oBAAoB,cAAeI,CAAiB,EACpD,SAAA,oBAAoB,YAAaC,CAAe,CAAA,CAE7D,EAEE,OAAAI,EAAA,kBAAA,KAAC,MAAI,CAAA,IAAK9B,EACP,SAAA,CAAA,CAACH,GAAeE,GACfgC,EAAA,kBAAA,IAAC,SAAA,CACC,UAAU,uBACV,IAAKtC,EACL,QAAS,IAAM,CACbK,EAAe,CAACD,CAAW,CAC7B,EAAG,SAAA,aAAA,CAEL,EAEFkC,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,gCACV,cAAgBd,GAAU,CACND,EAAAC,EAAO5B,EAAU,KAAK,CAAA,CAC1C,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,iCACV,cAAgBd,GAAU,CACxBD,EAAkBC,EAAO5B,EAAU,MAAQA,EAAU,IAAI,CAAA,CAC3D,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,gCACV,cAAgBd,GAAU,CACND,EAAAC,EAAO5B,EAAU,IAAI,CAAA,CACzC,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,iCACV,cAAgBd,GAAU,CACxBD,EAAkBC,EAAO5B,EAAU,MAAQA,EAAU,IAAI,CAAA,CAC3D,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,gCACV,cAAgBd,GAAU,CACND,EAAAC,EAAO5B,EAAU,KAAK,CAAA,CAC1C,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,iCACV,cAAgBd,GAAU,CACxBD,EAAkBC,EAAO5B,EAAU,MAAQA,EAAU,IAAI,CAAA,CAC3D,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,gCACV,cAAgBd,GAAU,CACND,EAAAC,EAAO5B,EAAU,IAAI,CAAA,CACzC,CACF,EACA0C,EAAA,kBAAA,IAAC,MAAA,CACC,UAAU,iCACV,cAAgBd,GAAU,CACxBD,EAAkBC,EAAO5B,EAAU,MAAQA,EAAU,IAAI,CAAA,CAC3D,CAAA,CACF,EACF,CAEJ"}