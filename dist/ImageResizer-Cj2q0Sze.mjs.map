{"version":3,"file":"ImageResizer-Cj2q0Sze.mjs","sources":["../src/ui/ImageResizer.tsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type {LexicalEditor} from 'lexical';\nimport type {JSX} from 'react';\n\nimport {calculateZoomLevel} from '@lexical/utils';\nimport * as React from 'react';\nimport {useRef} from 'react';\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nconst Direction = {\n  east: 1 << 0,\n  north: 1 << 3,\n  south: 1 << 1,\n  west: 1 << 2,\n};\n\nexport default function ImageResizer({\n  onResizeStart,\n  onResizeEnd,\n  buttonRef,\n  imageRef,\n  maxWidth,\n  editor,\n  showCaption,\n  setShowCaption,\n  captionsEnabled,\n}: {\n  editor: LexicalEditor;\n  buttonRef: {current: null | HTMLButtonElement};\n  imageRef: {current: null | HTMLElement};\n  maxWidth?: number;\n  onResizeEnd: (width: 'inherit' | number, height: 'inherit' | number) => void;\n  onResizeStart: () => void;\n  setShowCaption: (show: boolean) => void;\n  showCaption: boolean;\n  captionsEnabled: boolean;\n}): JSX.Element {\n  const controlWrapperRef = useRef<HTMLDivElement>(null);\n  const userSelect = useRef({\n    priority: '',\n    value: 'default',\n  });\n  const positioningRef = useRef<{\n    currentHeight: 'inherit' | number;\n    currentWidth: 'inherit' | number;\n    direction: number;\n    isResizing: boolean;\n    ratio: number;\n    startHeight: number;\n    startWidth: number;\n    startX: number;\n    startY: number;\n  }>({\n    currentHeight: 0,\n    currentWidth: 0,\n    direction: 0,\n    isResizing: false,\n    ratio: 0,\n    startHeight: 0,\n    startWidth: 0,\n    startX: 0,\n    startY: 0,\n  });\n  const editorRootElement = editor.getRootElement();\n  // Find max width, accounting for editor padding.\n  const maxWidthContainer = maxWidth\n    ? maxWidth\n    : editorRootElement !== null\n    ? editorRootElement.getBoundingClientRect().width - 20\n    : 100;\n  const maxHeightContainer =\n    editorRootElement !== null\n      ? editorRootElement.getBoundingClientRect().height - 20\n      : 100;\n\n  const minWidth = 100;\n  const minHeight = 100;\n\n  const setStartCursor = (direction: number) => {\n    const ew = direction === Direction.east || direction === Direction.west;\n    const ns = direction === Direction.north || direction === Direction.south;\n    const nwse =\n      (direction & Direction.north && direction & Direction.west) ||\n      (direction & Direction.south && direction & Direction.east);\n\n    const cursorDir = ew ? 'ew' : ns ? 'ns' : nwse ? 'nwse' : 'nesw';\n\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty(\n        'cursor',\n        `${cursorDir}-resize`,\n        'important',\n      );\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty(\n        'cursor',\n        `${cursorDir}-resize`,\n        'important',\n      );\n      userSelect.current.value = document.body.style.getPropertyValue(\n        '-webkit-user-select',\n      );\n      userSelect.current.priority = document.body.style.getPropertyPriority(\n        '-webkit-user-select',\n      );\n      document.body.style.setProperty(\n        '-webkit-user-select',\n        `none`,\n        'important',\n      );\n    }\n  };\n\n  const setEndCursor = () => {\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty('cursor', 'text');\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty('cursor', 'default');\n      document.body.style.setProperty(\n        '-webkit-user-select',\n        userSelect.current.value,\n        userSelect.current.priority,\n      );\n    }\n  };\n\n  const handlePointerDown = (\n    event: React.PointerEvent<HTMLDivElement>,\n    direction: number,\n  ) => {\n    if (!editor.isEditable()) {\n      return;\n    }\n\n    const image = imageRef.current;\n    const controlWrapper = controlWrapperRef.current;\n\n    if (image !== null && controlWrapper !== null) {\n      event.preventDefault();\n      const {width, height} = image.getBoundingClientRect();\n      const zoom = calculateZoomLevel(image);\n      const positioning = positioningRef.current;\n      positioning.startWidth = width;\n      positioning.startHeight = height;\n      positioning.ratio = width / height;\n      positioning.currentWidth = width;\n      positioning.currentHeight = height;\n      positioning.startX = event.clientX / zoom;\n      positioning.startY = event.clientY / zoom;\n      positioning.isResizing = true;\n      positioning.direction = direction;\n\n      setStartCursor(direction);\n      onResizeStart();\n\n      controlWrapper.classList.add('image-control-wrapper--resizing');\n      image.style.height = `${height}px`;\n      image.style.width = `${width}px`;\n\n      document.addEventListener('pointermove', handlePointerMove);\n      document.addEventListener('pointerup', handlePointerUp);\n    }\n  };\n  const handlePointerMove = (event: PointerEvent) => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n\n    const isHorizontal =\n      positioning.direction & (Direction.east | Direction.west);\n    const isVertical =\n      positioning.direction & (Direction.south | Direction.north);\n\n    if (image !== null && positioning.isResizing) {\n      const zoom = calculateZoomLevel(image);\n      // Corner cursor\n      if (isHorizontal && isVertical) {\n        let diff = Math.floor(positioning.startX - event.clientX / zoom);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(\n          positioning.startWidth + diff,\n          minWidth,\n          maxWidthContainer,\n        );\n\n        const height = width / positioning.ratio;\n        image.style.width = `${width}px`;\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n        positioning.currentWidth = width;\n      } else if (isVertical) {\n        let diff = Math.floor(positioning.startY - event.clientY / zoom);\n        diff = positioning.direction & Direction.south ? -diff : diff;\n\n        const height = clamp(\n          positioning.startHeight + diff,\n          minHeight,\n          maxHeightContainer,\n        );\n\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n      } else {\n        let diff = Math.floor(positioning.startX - event.clientX / zoom);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(\n          positioning.startWidth + diff,\n          minWidth,\n          maxWidthContainer,\n        );\n\n        image.style.width = `${width}px`;\n        positioning.currentWidth = width;\n      }\n    }\n  };\n  const handlePointerUp = () => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n    const controlWrapper = controlWrapperRef.current;\n    if (image !== null && controlWrapper !== null && positioning.isResizing) {\n      const width = positioning.currentWidth;\n      const height = positioning.currentHeight;\n      positioning.startWidth = 0;\n      positioning.startHeight = 0;\n      positioning.ratio = 0;\n      positioning.startX = 0;\n      positioning.startY = 0;\n      positioning.currentWidth = 0;\n      positioning.currentHeight = 0;\n      positioning.isResizing = false;\n\n      controlWrapper.classList.remove('image-control-wrapper--resizing');\n\n      setEndCursor();\n      onResizeEnd(width, height);\n\n      document.removeEventListener('pointermove', handlePointerMove);\n      document.removeEventListener('pointerup', handlePointerUp);\n    }\n  };\n  return (\n    <div ref={controlWrapperRef}>\n      {!showCaption && captionsEnabled && (\n        <button\n          className=\"image-caption-button\"\n          ref={buttonRef}\n          onClick={() => {\n            setShowCaption(!showCaption);\n          }}>\n          Add Caption\n        </button>\n      )}\n      <div\n        className=\"image-resizer image-resizer-n\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-ne\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-e\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-se\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-s\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-sw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-w\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-nw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.west);\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["clamp","value","min","max","Direction","ImageResizer","onResizeStart","onResizeEnd","buttonRef","imageRef","maxWidth","editor","showCaption","setShowCaption","captionsEnabled","controlWrapperRef","useRef","userSelect","positioningRef","editorRootElement","maxWidthContainer","maxHeightContainer","minWidth","minHeight","setStartCursor","direction","ew","ns","nwse","cursorDir","setEndCursor","handlePointerDown","event","image","controlWrapper","width","height","zoom","calculateZoomLevel","positioning","handlePointerMove","handlePointerUp","isHorizontal","isVertical","diff","jsxs","jsx"],"mappings":"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"}