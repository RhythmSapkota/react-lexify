{"version":3,"file":"EquationComponent-CQNVvUB0.js","sources":["../src/ui/EquationEditor.tsx","../src/nodes/EquationComponent.tsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type {JSX, Ref, RefObject} from 'react';\n\nimport './EquationEditor.css';\n\nimport {isHTMLElement} from 'lexical';\nimport {ChangeEvent, forwardRef} from 'react';\n\ntype BaseEquationEditorProps = {\n  equation: string;\n  inline: boolean;\n  setEquation: (equation: string) => void;\n};\n\nfunction EquationEditor(\n  {equation, setEquation, inline}: BaseEquationEditorProps,\n  forwardedRef: Ref<HTMLInputElement | HTMLTextAreaElement>,\n): JSX.Element {\n  const onChange = (event: ChangeEvent) => {\n    setEquation((event.target as HTMLInputElement).value);\n  };\n\n  return inline && isHTMLElement(forwardedRef) ? (\n    <span className=\"EquationEditor_inputBackground\">\n      <span className=\"EquationEditor_dollarSign\">$</span>\n      <input\n        className=\"EquationEditor_inlineEditor\"\n        value={equation}\n        onChange={onChange}\n        autoFocus={true}\n        ref={forwardedRef as RefObject<HTMLInputElement>}\n      />\n      <span className=\"EquationEditor_dollarSign\">$</span>\n    </span>\n  ) : (\n    <div className=\"EquationEditor_inputBackground\">\n      <span className=\"EquationEditor_dollarSign\">{'$$\\n'}</span>\n      <textarea\n        className=\"EquationEditor_blockEditor\"\n        value={equation}\n        onChange={onChange}\n        ref={forwardedRef as RefObject<HTMLTextAreaElement>}\n      />\n      <span className=\"EquationEditor_dollarSign\">{'\\n$$'}</span>\n    </div>\n  );\n}\n\nexport default forwardRef(EquationEditor);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type {JSX} from 'react';\n\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\nimport {useLexicalEditable} from '@lexical/react/useLexicalEditable';\nimport {mergeRegister} from '@lexical/utils';\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  COMMAND_PRIORITY_HIGH,\n  KEY_ESCAPE_COMMAND,\n  NodeKey,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical';\nimport * as React from 'react';\nimport {useCallback, useEffect, useRef, useState} from 'react';\nimport {ErrorBoundary} from 'react-error-boundary';\n\nimport EquationEditor from '../ui/EquationEditor';\nimport KatexRenderer from '../ui/KatexRenderer';\nimport {$isEquationNode} from './EquationNode';\n\ntype EquationComponentProps = {\n  equation: string;\n  inline: boolean;\n  nodeKey: NodeKey;\n};\n\nexport default function EquationComponent({\n  equation,\n  inline,\n  nodeKey,\n}: EquationComponentProps): JSX.Element {\n  const [editor] = useLexicalComposerContext();\n  const isEditable = useLexicalEditable();\n  const [equationValue, setEquationValue] = useState(equation);\n  const [showEquationEditor, setShowEquationEditor] = useState<boolean>(false);\n  const inputRef = useRef<HTMLTextAreaElement | HTMLInputElement>(null);\n\n  const onHide = useCallback(\n    (restoreSelection?: boolean) => {\n      setShowEquationEditor(false);\n      editor.update(() => {\n        const node = $getNodeByKey(nodeKey);\n        if ($isEquationNode(node)) {\n          node.setEquation(equationValue);\n          if (restoreSelection) {\n            node.selectNext(0, 0);\n          }\n        }\n      });\n    },\n    [editor, equationValue, nodeKey],\n  );\n\n  useEffect(() => {\n    if (!showEquationEditor && equationValue !== equation) {\n      setEquationValue(equation);\n    }\n  }, [showEquationEditor, equation, equationValue]);\n\n  useEffect(() => {\n    if (!isEditable) {\n      return;\n    }\n    if (showEquationEditor) {\n      return mergeRegister(\n        editor.registerCommand(\n          SELECTION_CHANGE_COMMAND,\n          (payload) => {\n            const activeElement = document.activeElement;\n            const inputElem = inputRef.current;\n            if (inputElem !== activeElement) {\n              onHide();\n            }\n            return false;\n          },\n          COMMAND_PRIORITY_HIGH,\n        ),\n        editor.registerCommand(\n          KEY_ESCAPE_COMMAND,\n          (payload) => {\n            const activeElement = document.activeElement;\n            const inputElem = inputRef.current;\n            if (inputElem === activeElement) {\n              onHide(true);\n              return true;\n            }\n            return false;\n          },\n          COMMAND_PRIORITY_HIGH,\n        ),\n      );\n    } else {\n      return editor.registerUpdateListener(({editorState}) => {\n        const isSelected = editorState.read(() => {\n          const selection = $getSelection();\n          return (\n            $isNodeSelection(selection) &&\n            selection.has(nodeKey) &&\n            selection.getNodes().length === 1\n          );\n        });\n        if (isSelected) {\n          setShowEquationEditor(true);\n        }\n      });\n    }\n  }, [editor, nodeKey, onHide, showEquationEditor, isEditable]);\n\n  return (\n    <>\n      {showEquationEditor && isEditable ? (\n        <EquationEditor\n          equation={equationValue}\n          setEquation={setEquationValue}\n          inline={inline}\n          ref={inputRef}\n        />\n      ) : (\n        <ErrorBoundary onError={(e) => editor._onError(e)} fallback={null}>\n          <KatexRenderer\n            equation={equationValue}\n            inline={inline}\n            onDoubleClick={() => {\n              if (isEditable) {\n                setShowEquationEditor(true);\n              }\n            }}\n          />\n        </ErrorBoundary>\n      )}\n    </>\n  );\n}\n"],"names":["EquationEditor","equation","setEquation","inline","forwardedRef","onChange","event","isHTMLElement","jsxs","jsx","forwardRef","EquationComponent","nodeKey","editor","useLexicalComposerContext","isEditable","useLexicalEditable","equationValue","setEquationValue","useState","showEquationEditor","setShowEquationEditor","inputRef","useRef","onHide","useCallback","restoreSelection","node","$getNodeByKey","$isEquationNode","useEffect","mergeRegister","SELECTION_CHANGE_COMMAND","payload","activeElement","COMMAND_PRIORITY_HIGH","KEY_ESCAPE_COMMAND","editorState","selection","$getSelection","$isNodeSelection","Fragment","ErrorBoundary","e","KatexRenderer"],"mappings":"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"}