{"version":3,"file":"flowDiagram-66a62f08-B_LsfAMp.mjs","sources":["../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/xml.js","../node_modules/dagre-d3-es/src/dagre-js/arrows.js","../node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js","../node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js","../node_modules/dagre-d3-es/src/dagre-js/label/add-label.js","../node_modules/dagre-d3-es/src/dagre-js/create-clusters.js","../node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js","../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js","../node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js","../node_modules/dagre-d3-es/src/dagre-js/create-nodes.js","../node_modules/dagre-d3-es/src/dagre-js/position-clusters.js","../node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js","../node_modules/dagre-d3-es/src/dagre-js/position-nodes.js","../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js","../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js","../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js","../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js","../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js","../node_modules/dagre-d3-es/src/dagre-js/shapes.js","../node_modules/dagre-d3-es/src/dagre-js/render.js","../node_modules/mermaid/dist/flowDiagram-66a62f08.js"],"sourcesContent":["function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import text from \"./text.js\";\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n","import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n","import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n","export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n","import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n","import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n","import { p as parser, f as flowDb } from \"./flowDb-956e92f1.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select, curveLinear, selectAll } from \"d3\";\nimport { k as getStylesFromArray, m as evaluate, c as getConfig, r as renderKatex, e as common, l as log, n as interpolateToCurve, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { render } from \"dagre-d3-es\";\nimport { applyStyle } from \"dagre-d3-es/src/dagre-js/util.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport { intersectPolygon } from \"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\";\nimport { intersectRect } from \"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\";\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-c10674c1.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"./index-3862675e.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n  const shapeSvg = parent.insert(\"rect\", \":first-child\").attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const shapeSvg = parent.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  node.intersect = function(point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\nfunction addToRender(render2) {\n  render2.shapes().question = question;\n  render2.shapes().hexagon = hexagon;\n  render2.shapes().stadium = stadium;\n  render2.shapes().subroutine = subroutine;\n  render2.shapes().cylinder = cylinder;\n  render2.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n  render2.shapes().lean_right = lean_right;\n  render2.shapes().lean_left = lean_left;\n  render2.shapes().trapezoid = trapezoid;\n  render2.shapes().inv_trapezoid = inv_trapezoid;\n  render2.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\nfunction addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n  addShape({ rect_left_inv_arrow });\n  addShape({ lean_right });\n  addShape({ lean_left });\n  addShape({ trapezoid });\n  addShape({ inv_trapezoid });\n  addShape({ rect_right_inv_arrow });\n}\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nconst flowChartShapes = {\n  addToRender,\n  addToRenderV2\n};\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const node = {\n        label: await renderKatex(\n          vertexText.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            // cspell:disable-line\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          ),\n          getConfig()\n        )\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n      svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n      const rows = vertexText.split(common.lineBreakRegex);\n      for (const row of rows) {\n        const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n        tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        tspan.setAttribute(\"dy\", \"1em\");\n        tspan.setAttribute(\"x\", \"1\");\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    log.warn(\"Adding node\", vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: \"svg\",\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id)\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  let cnt = 0;\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkId = \"L-\" + edge.start + \"-\" + edge.end;\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = {};\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case \"normal\":\n          style = \"fill:none\";\n          if (defaultStyle !== void 0) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== void 0) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case \"dotted\":\n          style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n          break;\n        case \"thick\":\n          style = \" stroke-width: 3.5px;fill:none\";\n          break;\n      }\n    }\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = \"html\";\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${edgeData.labelStyle}\">${await renderKatex(\n          edge.text.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            // cspell:disable-line\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          ),\n          getConfig()\n        )}</span>`;\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + \" \" + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  log.info(\"Extracting classes\");\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    diagObj.db.addVertex(subG.id, subG.title, \"group\", void 0, subG.classes);\n  }\n  const vert = diagObj.db.getVertices();\n  log.warn(\"Get vertices\", vert);\n  const edges = diagObj.db.getEdges();\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        \"Setting subgraph\",\n        subG.nodes[j],\n        diagObj.db.lookUpDomId(subG.nodes[j]),\n        diagObj.db.lookUpDomId(subG.id)\n      );\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g, diagObj);\n  const render$1 = new render();\n  flowChartShapes.addToRender(render$1);\n  render$1.arrows().none = function normal(parent, id2, edge, type) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    const path = marker.append(\"path\").attr(\"d\", \"M 0 0 L 0 0 L 0 0 z\");\n    applyStyle(path, edge[type + \"Style\"]);\n  };\n  render$1.arrows().normal = function normal(parent, id2) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    marker.append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowheadPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  };\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  render$1(element, g);\n  element.selectAll(\"g.node\").attr(\"title\", function() {\n    return diagObj.db.getTooltip(this.id);\n  });\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== \"undefined\") {\n      const clusterRects = doc.querySelectorAll(\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\n      );\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select(\".label\");\n      te.attr(\"transform\", `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr(\"id\", id + \"Text\");\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = root.select(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRenderer = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen(\"gen-1\");\n  }\n};\nexport {\n  diagram\n};\n"],"names":["responseText","response","text","input","init","parser","type","svg","arrows","normal","vee","undirected","setArrows","value","parent","id","edge","marker","path","util.applyStyle","addSVGLabel","root","node","domNode","addTextLabel","lines","processEscapeSequences","i","newText","escaped","ch","addLabel","location","label","labelSvg","addHtmlLabel","labelBBox","y","createClusters","selection","g","clusters","v","util.isSubgraph","svgClusters","util.applyTransition","enterSelection","thisGroup","d3.select","labelGroup","c","domCluster","setCreateClusters","createEdgeLabels","svgEdgeLabels","e","util.edgeToId","bbox","_.has","exitSelection","setCreateEdgeLabels","intersectNode","point","createEdgePaths","previousPaths","newPaths","enter","exit","svgPaths","domEdge","util.applyClass","_.uniqueId","d3\n      .select","makeFragmentRef","calcPoints","arrowhead","setCreateEdgePaths","url","fragmentId","baseUrl","tail","head","points","createLine","line","d3.line","d3.svg","d","getCoords","elem","matrix","svgPathsEnter","sourceElem","_.range","svgPathExit","createNodes","shapes","simpleNodes","svgNodes","labelDom","shape","_.pick","shapeSvg","shapeBBox","setCreateNodes","positionClusters","created","translate","util\n    .applyTransition","positionEdgeLabels","positionNodes","intersectEllipse","rx","ry","cx","cy","px","py","det","dx","dy","intersectCircle","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","x","sameSign","intersectPolygon","polyPoints","x1","y1","intersections","minX","minY","entry","left","top","intersect","q","pdx","pdy","distp","qdx","qdy","distq","intersectRect","w","h","sx","sy","rect","ellipse","circle","diamond","setShapes","r","p","render","fn","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","nodes","layout","postProcessGraph","NODE_DEFAULT_ATTRS","EDGE_DEFAULT_ATTRS","d3.curveLinear","_.defaults","_.each","k","name","question","insertPolygonShape","hexagon","m","rect_left_inv_arrow","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","stadium","subroutine","cylinder","pos","addToRender","render2","addToRenderV2","addShape","flowChartShapes","conf","setConf","cnf","keys","key","addVertices","vert","svgId","_doc","diagObj","select","doc","vertex","classStr","styles","getStylesFromArray","vertexText","vertexNode","evaluate","getConfig","renderKatex","s","svgLabel","rows","common","row","tspan","radius","_shape","log","addEdges","edges","cnt","defaultStyle","defaultLabelStyle","defaultStyles","linkId","linkNameStart","linkNameEnd","edgeData","style","labelStyle","interpolateToCurve","curveLinear","getClasses","draw","_version","securityLevel","conf2","sandboxElement","dir","nodeSpacing","rankSpacing","graphlib.Graph","subG","subGraphs","i2","selectAll","j","render$1","id2","applyStyle","element","clusterRects","clusterEl","xPos","yPos","_width","te","labels","dim","setupGraphViewbox","link","linkNode","flowRenderer","diagram","flowDb","flowRendererV2","flowStyles"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}