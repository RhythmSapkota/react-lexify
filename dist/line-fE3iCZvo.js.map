{"version":3,"file":"line-fE3iCZvo.js","sources":["../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js"],"sourcesContent":["export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n"],"names":["x","p","y","line","defined","constant","context","curve","curveLinear","output","path","withPath","pointX","pointY","data","n","array","d","defined0","buffer","_"],"mappings":"qHAAO,SAASA,EAAEC,EAAG,CACnB,OAAOA,EAAE,CAAC,CACZ,CAEO,SAASC,EAAED,EAAG,CACnB,OAAOA,EAAE,CAAC,CACZ,CCAe,SAAAE,EAASH,EAAGE,EAAG,CAC5B,IAAIE,EAAUC,EAAQ,SAAC,EAAI,EACvBC,EAAU,KACVC,EAAQC,EAAW,YACnBC,EAAS,KACTC,EAAOC,EAAQ,SAACR,CAAI,EAExBH,EAAI,OAAOA,GAAM,WAAaA,EAAKA,IAAM,OAAaY,EAASP,EAAQ,SAACL,CAAC,EACzEE,EAAI,OAAOA,GAAM,WAAaA,EAAKA,IAAM,OAAaW,EAASR,EAAQ,SAACH,CAAC,EAEzE,SAASC,EAAKW,EAAM,CAClB,IAAI,EACAC,GAAKD,EAAOE,QAAMF,CAAI,GAAG,OACzBG,EACAC,EAAW,GACXC,EAIJ,IAFIb,GAAW,OAAMG,EAASF,EAAMY,EAAST,GAAM,GAE9C,EAAI,EAAG,GAAKK,EAAG,EAAE,EAChB,EAAE,EAAIA,GAAKX,EAAQa,EAAIH,EAAK,CAAC,EAAG,EAAGA,CAAI,KAAOI,KAC5CA,EAAW,CAACA,GAAUT,EAAO,UAAW,EACvCA,EAAO,QAAS,GAEnBS,GAAUT,EAAO,MAAM,CAACT,EAAEiB,EAAG,EAAGH,CAAI,EAAG,CAACZ,EAAEe,EAAG,EAAGH,CAAI,CAAC,EAG3D,GAAIK,EAAQ,OAAOV,EAAS,KAAMU,EAAS,IAAM,IACrD,CAEE,OAAAhB,EAAK,EAAI,SAASiB,EAAG,CACnB,OAAO,UAAU,QAAUpB,EAAI,OAAOoB,GAAM,WAAaA,EAAIf,WAAS,CAACe,CAAC,EAAGjB,GAAQH,CACpF,EAEDG,EAAK,EAAI,SAASiB,EAAG,CACnB,OAAO,UAAU,QAAUlB,EAAI,OAAOkB,GAAM,WAAaA,EAAIf,WAAS,CAACe,CAAC,EAAGjB,GAAQD,CACpF,EAEDC,EAAK,QAAU,SAASiB,EAAG,CACzB,OAAO,UAAU,QAAUhB,EAAU,OAAOgB,GAAM,WAAaA,EAAIf,EAAQ,SAAC,CAAC,CAACe,CAAC,EAAGjB,GAAQC,CAC3F,EAEDD,EAAK,MAAQ,SAASiB,EAAG,CACvB,OAAO,UAAU,QAAUb,EAAQa,EAAGd,GAAW,OAASG,EAASF,EAAMD,CAAO,GAAIH,GAAQI,CAC7F,EAEDJ,EAAK,QAAU,SAASiB,EAAG,CACzB,OAAO,UAAU,QAAUA,GAAK,KAAOd,EAAUG,EAAS,KAAOA,EAASF,EAAMD,EAAUc,CAAC,EAAGjB,GAAQG,CACvG,EAEMH,CACT","x_google_ignoreList":[0,1]}