{"version":3,"file":"timeline-definition-85554ec2-ClVPTrC1.mjs","sources":["../node_modules/mermaid/dist/timeline-definition-85554ec2.js"],"sourcesContent":["import { L as commonDb, v as clear$1, c as getConfig, l as log, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { select, arc } from \"d3\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [6, 8, 10, 11, 12, 14, 16, 17, 20, 21], $V1 = [1, 9], $V2 = [1, 10], $V3 = [1, 11], $V4 = [1, 12], $V5 = [1, 13], $V6 = [1, 16], $V7 = [1, 17];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"timeline\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"SPACE\": 8, \"statement\": 9, \"NEWLINE\": 10, \"title\": 11, \"acc_title\": 12, \"acc_title_value\": 13, \"acc_descr\": 14, \"acc_descr_value\": 15, \"acc_descr_multiline_value\": 16, \"section\": 17, \"period_statement\": 18, \"event_statement\": 19, \"period\": 20, \"event\": 21, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"timeline\", 6: \"EOF\", 8: \"SPACE\", 10: \"NEWLINE\", 11: \"title\", 12: \"acc_title\", 13: \"acc_title_value\", 14: \"acc_descr\", 15: \"acc_descr_value\", 16: \"acc_descr_multiline_value\", 17: \"section\", 20: \"period\", 21: \"event\" },\n    productions_: [0, [3, 3], [5, 0], [5, 2], [7, 2], [7, 1], [7, 1], [7, 1], [9, 1], [9, 2], [9, 2], [9, 1], [9, 1], [9, 1], [9, 1], [18, 1], [19, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 1:\n          return $$[$0 - 1];\n        case 2:\n          this.$ = [];\n          break;\n        case 3:\n          $$[$0 - 1].push($$[$0]);\n          this.$ = $$[$0 - 1];\n          break;\n        case 4:\n        case 5:\n          this.$ = $$[$0];\n          break;\n        case 6:\n        case 7:\n          this.$ = [];\n          break;\n        case 8:\n          yy.getCommonDb().setDiagramTitle($$[$0].substr(6));\n          this.$ = $$[$0].substr(6);\n          break;\n        case 9:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccTitle(this.$);\n          break;\n        case 10:\n        case 11:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccDescription(this.$);\n          break;\n        case 12:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n        case 15:\n          yy.addTask($$[$0], 0, \"\");\n          this.$ = $$[$0];\n          break;\n        case 16:\n          yy.addEvent($$[$0].substr(2));\n          this.$ = $$[$0];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: [1, 6], 9: 7, 10: [1, 8], 11: $V1, 12: $V2, 14: $V3, 16: $V4, 17: $V5, 18: 14, 19: 15, 20: $V6, 21: $V7 }, o($V0, [2, 7], { 1: [2, 1] }), o($V0, [2, 3]), { 9: 18, 11: $V1, 12: $V2, 14: $V3, 16: $V4, 17: $V5, 18: 14, 19: 15, 20: $V6, 21: $V7 }, o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 8]), { 13: [1, 19] }, { 15: [1, 20] }, o($V0, [2, 11]), o($V0, [2, 12]), o($V0, [2, 13]), o($V0, [2, 14]), o($V0, [2, 15]), o($V0, [2, 16]), o($V0, [2, 4]), o($V0, [2, 9]), o($V0, [2, 10])],\n    defaultActions: {},\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            return 10;\n          case 3:\n            break;\n          case 4:\n            break;\n          case 5:\n            return 4;\n          case 6:\n            return 11;\n          case 7:\n            this.begin(\"acc_title\");\n            return 12;\n          case 8:\n            this.popState();\n            return \"acc_title_value\";\n          case 9:\n            this.begin(\"acc_descr\");\n            return 14;\n          case 10:\n            this.popState();\n            return \"acc_descr_value\";\n          case 11:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 12:\n            this.popState();\n            break;\n          case 13:\n            return \"acc_descr_multiline_value\";\n          case 14:\n            return 17;\n          case 15:\n            return 21;\n          case 16:\n            return 20;\n          case 17:\n            return 6;\n          case 18:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:timeline\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?::\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"acc_descr_multiline\": { \"rules\": [12, 13], \"inclusive\": false }, \"acc_descr\": { \"rules\": [10], \"inclusive\": false }, \"acc_title\": { \"rules\": [8], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet currentSection = \"\";\nlet currentTaskId = 0;\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\nconst getCommonDb = () => commonDb;\nconst clear = function() {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = \"\";\n  rawTasks.length = 0;\n  clear$1();\n};\nconst addSection = function(txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\nconst getSections = function() {\n  return sections;\n};\nconst getTasks = function() {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n  tasks.push(...rawTasks);\n  return tasks;\n};\nconst addTask = function(period, length, event) {\n  const rawTask = {\n    id: currentTaskId++,\n    section: currentSection,\n    type: currentSection,\n    task: period,\n    score: length ? length : 0,\n    //if event is defined, then add it the events array\n    events: event ? [event] : []\n  };\n  rawTasks.push(rawTask);\n};\nconst addEvent = function(event) {\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\n  currentTask.events.push(event);\n};\nconst addTaskOrg = function(descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: []\n  };\n  tasks.push(newTask);\n};\nconst compileTasks = function() {\n  const compileTask = function(pos) {\n    return rawTasks[pos].processed;\n  };\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\nconst timelineDb = {\n  clear,\n  getCommonDb,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  addEvent\n};\nconst db = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  addEvent,\n  addSection,\n  addTask,\n  addTaskOrg,\n  clear,\n  default: timelineDb,\n  getCommonDb,\n  getSections,\n  getTasks\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst MAX_SECTIONS = 12;\nconst drawRect = function(elem, rectData) {\n  const rectElem = elem.append(\"rect\");\n  rectElem.attr(\"x\", rectData.x);\n  rectElem.attr(\"y\", rectData.y);\n  rectElem.attr(\"fill\", rectData.fill);\n  rectElem.attr(\"stroke\", rectData.stroke);\n  rectElem.attr(\"width\", rectData.width);\n  rectElem.attr(\"height\", rectData.height);\n  rectElem.attr(\"rx\", rectData.rx);\n  rectElem.attr(\"ry\", rectData.ry);\n  if (rectData.class !== void 0) {\n    rectElem.attr(\"class\", rectData.class);\n  }\n  return rectElem;\n};\nconst drawFace = function(element, faceData) {\n  const radius = 15;\n  const circleElement = element.append(\"circle\").attr(\"cx\", faceData.cx).attr(\"cy\", faceData.cy).attr(\"class\", \"face\").attr(\"r\", radius).attr(\"stroke-width\", 2).attr(\"overflow\", \"visible\");\n  const face = element.append(\"g\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx - radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx + radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  function smile(face2) {\n    const arc$1 = arc().startAngle(Math.PI / 2).endAngle(3 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 2) + \")\");\n  }\n  function sad(face2) {\n    const arc$1 = arc().startAngle(3 * Math.PI / 2).endAngle(5 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 7) + \")\");\n  }\n  function ambivalent(face2) {\n    face2.append(\"line\").attr(\"class\", \"mouth\").attr(\"stroke\", 2).attr(\"x1\", faceData.cx - 5).attr(\"y1\", faceData.cy + 7).attr(\"x2\", faceData.cx + 5).attr(\"y2\", faceData.cy + 7).attr(\"class\", \"mouth\").attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#666\");\n  }\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n  return circleElement;\n};\nconst drawCircle = function(element, circleData) {\n  const circleElement = element.append(\"circle\");\n  circleElement.attr(\"cx\", circleData.cx);\n  circleElement.attr(\"cy\", circleData.cy);\n  circleElement.attr(\"class\", \"actor-\" + circleData.pos);\n  circleElement.attr(\"fill\", circleData.fill);\n  circleElement.attr(\"stroke\", circleData.stroke);\n  circleElement.attr(\"r\", circleData.r);\n  if (circleElement.class !== void 0) {\n    circleElement.attr(\"class\", circleElement.class);\n  }\n  if (circleData.title !== void 0) {\n    circleElement.append(\"title\").text(circleData.title);\n  }\n  return circleElement;\n};\nconst drawText = function(elem, textData) {\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.text(nText);\n  return textElem;\n};\nconst drawLabel = function(elem, txtObject) {\n  function genPoints(x, y, width, height, cut) {\n    return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n  }\n  const polygon = elem.append(\"polygon\");\n  polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr(\"class\", \"labelBox\");\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\nconst drawSection = function(elem, section, conf) {\n  const g = elem.append(\"g\");\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"journey-section section-type-\" + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"journey-section section-type-\" + section.num },\n    conf,\n    section.colour\n  );\n};\nlet taskCount = -1;\nconst drawTask = function(elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append(\"g\");\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append(\"line\").attr(\"id\", \"task\" + taskCount).attr(\"x1\", center).attr(\"y1\", task.y).attr(\"x2\", center).attr(\"y2\", maxHeight).attr(\"class\", \"task-line\").attr(\"stroke-width\", \"1px\").attr(\"stroke-dasharray\", \"4 2\").attr(\"stroke\", \"#666\");\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score\n  });\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"task task-type-\" + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  task.x + 14;\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"task\" },\n    conf,\n    task.colour\n  );\n};\nconst drawBackgroundRect = function(elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: \"rect\"\n  });\n  rectElem.lower();\n};\nconst getTextObj = function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    \"text-anchor\": \"start\",\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0\n  };\n};\nconst getNoteRect = function() {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: \"start\",\n    height: 100,\n    rx: 0,\n    ry: 0\n  };\n};\nconst _drawTextCandidateFunc = function() {\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"font-color\", colour).style(\"text-anchor\", \"middle\").text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - taskFontSize * (lines.length - 1) / 2;\n      const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).attr(\"fill\", colour).style(\"text-anchor\", \"middle\").style(\"font-size\", taskFontSize).style(\"font-family\", taskFontFamily);\n      text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append(\"switch\");\n    const f = body.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height).attr(\"position\", \"fixed\");\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").attr(\"class\", \"label\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n  return function(conf) {\n    return conf.textPlacement === \"fo\" ? byFo : conf.textPlacement === \"old\" ? byText : byTspan;\n  };\n}();\nconst initGraphics = function(graphics) {\n  graphics.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 5).attr(\"refY\", 2).attr(\"markerWidth\", 6).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\n};\nfunction wrap(text, width) {\n  text.each(function() {\n    var text2 = select(this), words = text2.text().split(/(\\s+|<br>)/).reverse(), word, line = [], lineHeight = 1.1, y = text2.attr(\"y\"), dy = parseFloat(text2.attr(\"dy\")), tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(\" \").trim());\n      if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\n        line.pop();\n        tspan.text(line.join(\" \").trim());\n        if (word === \"<br>\") {\n          line = [\"\"];\n        } else {\n          line = [word];\n        }\n        tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\n      }\n    }\n  });\n}\nconst drawNode = function(elem, node, fullSection, conf) {\n  const section = fullSection % MAX_SECTIONS - 1;\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  nodeElem.attr(\n    \"class\",\n    (node.class ? node.class + \" \" : \"\") + \"timeline-node \" + (\"section-\" + section)\n  );\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.height = Math.max(node.height, node.maxHeight);\n  node.width = node.width + 2 * node.padding;\n  textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\n  defaultBkg(bkgElem, node, section);\n  return node;\n};\nconst getVirtualNodeHeight = function(elem, node, conf) {\n  const textElem = elem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  textElem.remove();\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n};\nconst defaultBkg = function(elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\n    \"d\",\n    `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`\n  );\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst svgDraw = {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n  drawNode,\n  getVirtualNodeHeight\n};\nconst draw = function(text, id, version, diagObj) {\n  var _a, _b;\n  const conf = getConfig();\n  const LEFT_MARGIN = conf.leftMargin ?? 50;\n  log.debug(\"timeline\", diagObj.db);\n  const securityLevel = conf.securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(\"#\" + id);\n  svg.append(\"g\");\n  const tasks2 = diagObj.db.getTasks();\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\n  log.debug(\"task\", tasks2);\n  svgDraw.initGraphics(svg);\n  const sections2 = diagObj.db.getSections();\n  log.debug(\"sections\", sections2);\n  let maxSectionHeight = 0;\n  let maxTaskHeight = 0;\n  let depthY = 0;\n  let sectionBeginY = 0;\n  let masterX = 50 + LEFT_MARGIN;\n  let masterY = 50;\n  sectionBeginY = 50;\n  let sectionNumber = 0;\n  let hasSections = true;\n  sections2.forEach(function(section) {\n    const sectionNode = {\n      number: sectionNumber,\n      descr: section,\n      section: sectionNumber,\n      width: 150,\n      padding: 20,\n      maxHeight: maxSectionHeight\n    };\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n    log.debug(\"sectionHeight before draw\", sectionHeight);\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n  });\n  let maxEventCount = 0;\n  let maxEventLineLength = 0;\n  log.debug(\"tasks.length\", tasks2.length);\n  for (const [i, task] of tasks2.entries()) {\n    const taskNode = {\n      number: i,\n      descr: task,\n      section: task.section,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n    log.debug(\"taskHeight before draw\", taskHeight);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n    maxEventCount = Math.max(maxEventCount, task.events.length);\n    let maxEventLineLengthTemp = 0;\n    for (let j = 0; j < task.events.length; j++) {\n      const event = task.events[j];\n      const eventNode = {\n        descr: event,\n        section: task.section,\n        number: task.section,\n        width: 150,\n        padding: 20,\n        maxHeight: 50\n      };\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n    }\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n  }\n  log.debug(\"maxSectionHeight before draw\", maxSectionHeight);\n  log.debug(\"maxTaskHeight before draw\", maxTaskHeight);\n  if (sections2 && sections2.length > 0) {\n    sections2.forEach((section) => {\n      const tasksForSection = tasks2.filter((task) => task.section === section);\n      const sectionNode = {\n        number: sectionNumber,\n        descr: section,\n        section: sectionNumber,\n        width: 200 * Math.max(tasksForSection.length, 1) - 50,\n        padding: 20,\n        maxHeight: maxSectionHeight\n      };\n      log.debug(\"sectionNode\", sectionNode);\n      const sectionNodeWrapper = svg.append(\"g\");\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n      log.debug(\"sectionNode output\", node);\n      sectionNodeWrapper.attr(\"transform\", `translate(${masterX}, ${sectionBeginY})`);\n      masterY += maxSectionHeight + 50;\n      if (tasksForSection.length > 0) {\n        drawTasks(\n          svg,\n          tasksForSection,\n          sectionNumber,\n          masterX,\n          masterY,\n          maxTaskHeight,\n          conf,\n          maxEventCount,\n          maxEventLineLength,\n          maxSectionHeight,\n          false\n        );\n      }\n      masterX += 200 * Math.max(tasksForSection.length, 1);\n      masterY = sectionBeginY;\n      sectionNumber++;\n    });\n  } else {\n    hasSections = false;\n    drawTasks(\n      svg,\n      tasks2,\n      sectionNumber,\n      masterX,\n      masterY,\n      maxTaskHeight,\n      conf,\n      maxEventCount,\n      maxEventLineLength,\n      maxSectionHeight,\n      true\n    );\n  }\n  const box = svg.node().getBBox();\n  log.debug(\"bounds\", box);\n  if (title) {\n    svg.append(\"text\").text(title).attr(\"x\", box.width / 2 - LEFT_MARGIN).attr(\"font-size\", \"4ex\").attr(\"font-weight\", \"bold\").attr(\"y\", 20);\n  }\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n  const lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\n  lineWrapper.append(\"line\").attr(\"x1\", LEFT_MARGIN).attr(\"y1\", depthY).attr(\"x2\", box.width + 3 * LEFT_MARGIN).attr(\"y2\", depthY).attr(\"stroke-width\", 4).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\");\n  setupGraphViewbox(\n    void 0,\n    svg,\n    ((_a = conf.timeline) == null ? void 0 : _a.padding) ?? 50,\n    ((_b = conf.timeline) == null ? void 0 : _b.useMaxWidth) ?? false\n  );\n};\nconst drawTasks = function(diagram2, tasks2, sectionColor, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, isWithoutSections) {\n  var _a;\n  for (const task of tasks2) {\n    const taskNode = {\n      descr: task.task,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    log.debug(\"taskNode\", taskNode);\n    const taskWrapper = diagram2.append(\"g\").attr(\"class\", \"taskWrapper\");\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n    const taskHeight = node.height;\n    log.debug(\"taskHeight after draw\", taskHeight);\n    taskWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n    if (task.events) {\n      const lineWrapper = diagram2.append(\"g\").attr(\"class\", \"lineWrapper\");\n      let lineLength = maxTaskHeight;\n      masterY += 100;\n      lineLength = lineLength + drawEvents(diagram2, task.events, sectionColor, masterX, masterY, conf);\n      masterY -= 100;\n      lineWrapper.append(\"line\").attr(\"x1\", masterX + 190 / 2).attr(\"y1\", masterY + maxTaskHeight).attr(\"x2\", masterX + 190 / 2).attr(\n        \"y2\",\n        masterY + maxTaskHeight + (isWithoutSections ? maxTaskHeight : maxSectionHeight) + maxEventLineLength + 120\n      ).attr(\"stroke-width\", 2).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\").attr(\"stroke-dasharray\", \"5,5\");\n    }\n    masterX = masterX + 200;\n    if (isWithoutSections && !((_a = conf.timeline) == null ? void 0 : _a.disableMulticolor)) {\n      sectionColor++;\n    }\n  }\n  masterY = masterY - 10;\n};\nconst drawEvents = function(diagram2, events, sectionColor, masterX, masterY, conf) {\n  let maxEventHeight = 0;\n  const eventBeginY = masterY;\n  masterY = masterY + 100;\n  for (const event of events) {\n    const eventNode = {\n      descr: event,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: 50\n    };\n    log.debug(\"eventNode\", eventNode);\n    const eventWrapper = diagram2.append(\"g\").attr(\"class\", \"eventWrapper\");\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n    const eventHeight = node.height;\n    maxEventHeight = maxEventHeight + eventHeight;\n    eventWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    masterY = masterY + 10 + eventHeight;\n  }\n  masterY = eventBeginY;\n  return maxEventHeight;\n};\nconst renderer = {\n  setConf: () => {\n  },\n  draw\n};\nconst genSections = (options) => {\n  let sections2 = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections2 += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options[\"cScaleLabel\" + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections2;\n};\nconst getStyles = (options) => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["parser","o","k","v","o2","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","parser2","yytext","yyleng","yylineno","yy","yystate","$$","_$","$0","str","hash","error","input","self","stack","tstack","vstack","lstack","table","TERROR","EOF","args","lexer2","sharedState","yyloc","ranges","lex","token","symbol","state","action","r","yyval","p","len","newState","expected","errStr","lexer","ch","lines","oldLines","n","past","next","pre","c","match","indexed_rule","backup","tempMatch","index","rules","i","condition","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","currentSection","currentTaskId","sections","tasks","rawTasks","getCommonDb","commonDb","clear","clear$1","addSection","txt","getSections","getTasks","allItemsProcessed","compileTasks","maxDepth","iterationCount","addTask","period","length","event","rawTask","addEvent","task","addTaskOrg","descr","newTask","compileTask","pos","allProcessed","timelineDb","db","MAX_SECTIONS","drawRect","elem","rectData","rectElem","drawFace","element","faceData","circleElement","face","smile","face2","arc$1","arc","sad","ambivalent","drawCircle","circleData","drawText","textData","nText","textElem","span","drawLabel","txtObject","genPoints","x","y","width","height","cut","polygon","drawSection","section","conf","g","rect","getNoteRect","_drawTextCandidateFunc","taskCount","drawTask","center","maxHeight","drawBackgroundRect","bounds","getTextObj","byText","content","textAttrs","colour","text","_setTextAttrs","byTspan","taskFontSize","taskFontFamily","dy","byFo","body","toText","fromTextAttrsDict","key","initGraphics","graphics","wrap","text2","select","words","word","line","lineHeight","tspan","j","drawNode","node","fullSection","nodeElem","bkgElem","bbox","fontSize","defaultBkg","getVirtualNodeHeight","svgDraw","draw","id","version","diagObj","_a","_b","getConfig","LEFT_MARGIN","log","securityLevel","sandboxElement","svg","tasks2","title","sections2","maxSectionHeight","maxTaskHeight","depthY","sectionBeginY","masterX","masterY","sectionNumber","hasSections","sectionNode","sectionHeight","maxEventCount","maxEventLineLength","taskNode","taskHeight","maxEventLineLengthTemp","eventNode","tasksForSection","sectionNodeWrapper","drawTasks","box","setupGraphViewbox","diagram2","sectionColor","isWithoutSections","taskWrapper","lineWrapper","lineLength","drawEvents","events","maxEventHeight","eventBeginY","eventWrapper","eventHeight","renderer","genSections","options","isDark","lighten","darken","sw","getStyles","styles","diagram"],"mappings":"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","x_google_ignoreList":[0]}