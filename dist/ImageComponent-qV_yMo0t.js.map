{"version":3,"file":"ImageComponent-qV_yMo0t.js","sources":["../src/images/image-broken.svg","../src/nodes/ImageComponent.tsx"],"sourcesContent":["export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='utf-8'?%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Generator:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M22%203H2v18h20v-2h-2v-2h2v-2h-2v-2h2v-2h-2V9h2V7h-2V5h2V3zm-2%204v2h-2v2h2v2h-2v2h2v2h-2v2H4V5h14v2h2zm-6%202h-2v2h-2v2H8v2H6v2h2v-2h2v-2h2v-2h2v2h2v-2h-2V9zM6%207h2v2H6V7z'%20fill='%23000000'/%3e%3c/svg%3e\"","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type {\n  BaseSelection,\n  LexicalCommand,\n  LexicalEditor,\n  NodeKey,\n} from 'lexical';\nimport type {JSX} from 'react';\n\nimport './ImageNode.css';\n\nimport {AutoFocusPlugin} from '@lexical/react/LexicalAutoFocusPlugin';\nimport {useCollaborationContext} from '@lexical/react/LexicalCollaborationContext';\nimport {CollaborationPlugin} from '@lexical/react/LexicalCollaborationPlugin';\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\nimport {LexicalErrorBoundary} from '@lexical/react/LexicalErrorBoundary';\nimport {HashtagPlugin} from '@lexical/react/LexicalHashtagPlugin';\nimport {HistoryPlugin} from '@lexical/react/LexicalHistoryPlugin';\nimport {LexicalNestedComposer} from '@lexical/react/LexicalNestedComposer';\nimport {RichTextPlugin} from '@lexical/react/LexicalRichTextPlugin';\nimport {useLexicalEditable} from '@lexical/react/useLexicalEditable';\nimport {useLexicalNodeSelection} from '@lexical/react/useLexicalNodeSelection';\nimport {mergeRegister} from '@lexical/utils';\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  $isRangeSelection,\n  $setSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  createCommand,\n  DRAGSTART_COMMAND,\n  KEY_ENTER_COMMAND,\n  KEY_ESCAPE_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical';\nimport * as React from 'react';\nimport {Suspense, useCallback, useEffect, useRef, useState} from 'react';\n\nimport {createWebsocketProvider} from '../collaboration';\nimport {useSettings} from '../context/SettingsContext';\nimport {useSharedHistoryContext} from '../context/SharedHistoryContext';\nimport brokenImage from '../images/image-broken.svg';\nimport EmojisPlugin from '../plugins/EmojisPlugin';\nimport KeywordsPlugin from '../plugins/KeywordsPlugin';\nimport LinkPlugin from '../plugins/LinkPlugin';\nimport MentionsPlugin from '../plugins/MentionsPlugin';\nimport TreeViewPlugin from '../plugins/TreeViewPlugin';\nimport ContentEditable from '../ui/ContentEditable';\nimport ImageResizer from '../ui/ImageResizer';\nimport {$isImageNode} from './ImageNode';\n\nconst imageCache = new Map<string, Promise<boolean> | boolean>();\n\nexport const RIGHT_CLICK_IMAGE_COMMAND: LexicalCommand<MouseEvent> =\n  createCommand('RIGHT_CLICK_IMAGE_COMMAND');\n\nfunction useSuspenseImage(src: string) {\n  let cached = imageCache.get(src);\n  if (typeof cached === 'boolean') {\n    return cached;\n  } else if (!cached) {\n    cached = new Promise<boolean>((resolve) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => resolve(false);\n      img.onerror = () => resolve(true);\n    }).then((hasError) => {\n      imageCache.set(src, hasError);\n      return hasError;\n    });\n    imageCache.set(src, cached);\n    throw cached;\n  }\n  throw cached;\n}\n\nfunction isSVG(src: string): boolean {\n  return src.toLowerCase().endsWith('.svg');\n}\n\nfunction LazyImage({\n  altText,\n  className,\n  imageRef,\n  src,\n  width,\n  height,\n  maxWidth,\n  onError,\n}: {\n  altText: string;\n  className: string | null;\n  height: 'inherit' | number;\n  imageRef: {current: null | HTMLImageElement};\n  maxWidth: number;\n  src: string;\n  width: 'inherit' | number;\n  onError: () => void;\n}): JSX.Element {\n  const [dimensions, setDimensions] = useState<{\n    width: number;\n    height: number;\n  } | null>(null);\n  const isSVGImage = isSVG(src);\n\n  // Set initial dimensions for SVG images\n  useEffect(() => {\n    if (imageRef.current && isSVGImage) {\n      const {naturalWidth, naturalHeight} = imageRef.current;\n      setDimensions({\n        height: naturalHeight,\n        width: naturalWidth,\n      });\n    }\n  }, [imageRef, isSVGImage]);\n\n  const hasError = useSuspenseImage(src);\n\n  useEffect(() => {\n    if (hasError) {\n      onError();\n    }\n  }, [hasError, onError]);\n\n  if (hasError) {\n    return <BrokenImage />;\n  }\n\n  // Calculate final dimensions with proper scaling\n  const calculateDimensions = () => {\n    if (!isSVGImage) {\n      return {\n        height,\n        maxWidth,\n        width,\n      };\n    }\n\n    // Use natural dimensions if available, otherwise fallback to defaults\n    const naturalWidth = dimensions?.width || 200;\n    const naturalHeight = dimensions?.height || 200;\n\n    let finalWidth = naturalWidth;\n    let finalHeight = naturalHeight;\n\n    // Scale down if width exceeds maxWidth while maintaining aspect ratio\n    if (finalWidth > maxWidth) {\n      const scale = maxWidth / finalWidth;\n      finalWidth = maxWidth;\n      finalHeight = Math.round(finalHeight * scale);\n    }\n\n    // Scale down if height exceeds maxHeight while maintaining aspect ratio\n    const maxHeight = 500;\n    if (finalHeight > maxHeight) {\n      const scale = maxHeight / finalHeight;\n      finalHeight = maxHeight;\n      finalWidth = Math.round(finalWidth * scale);\n    }\n\n    return {\n      height: finalHeight,\n      maxWidth,\n      width: finalWidth,\n    };\n  };\n\n  const imageStyle = calculateDimensions();\n\n  return (\n    <img\n      className={className || undefined}\n      src={src}\n      alt={altText}\n      ref={imageRef}\n      style={imageStyle}\n      onError={onError}\n      draggable=\"false\"\n      onLoad={(e) => {\n        if (isSVGImage) {\n          const img = e.currentTarget;\n          setDimensions({\n            height: img.naturalHeight,\n            width: img.naturalWidth,\n          });\n        }\n      }}\n    />\n  );\n}\n\nfunction BrokenImage(): JSX.Element {\n  return (\n    <img\n      src={brokenImage}\n      style={{\n        height: 200,\n        opacity: 0.2,\n        width: 200,\n      }}\n      draggable=\"false\"\n      alt=\"Broken image\"\n    />\n  );\n}\n\nexport default function ImageComponent({\n  src,\n  altText,\n  nodeKey,\n  width,\n  height,\n  maxWidth,\n  resizable,\n  showCaption,\n  caption,\n  captionsEnabled,\n}: {\n  altText: string;\n  caption: LexicalEditor;\n  height: 'inherit' | number;\n  maxWidth: number;\n  nodeKey: NodeKey;\n  resizable: boolean;\n  showCaption: boolean;\n  src: string;\n  width: 'inherit' | number;\n  captionsEnabled: boolean;\n}): JSX.Element {\n  const imageRef = useRef<null | HTMLImageElement>(null);\n  const buttonRef = useRef<HTMLButtonElement | null>(null);\n  const [isSelected, setSelected, clearSelection] =\n    useLexicalNodeSelection(nodeKey);\n  const [isResizing, setIsResizing] = useState<boolean>(false);\n  const {isCollabActive} = useCollaborationContext();\n  const [editor] = useLexicalComposerContext();\n  const [selection, setSelection] = useState<BaseSelection | null>(null);\n  const activeEditorRef = useRef<LexicalEditor | null>(null);\n  const [isLoadError, setIsLoadError] = useState<boolean>(false);\n  const isEditable = useLexicalEditable();\n\n  const $onEnter = useCallback(\n    (event: KeyboardEvent) => {\n      const latestSelection = $getSelection();\n      const buttonElem = buttonRef.current;\n      if (\n        isSelected &&\n        $isNodeSelection(latestSelection) &&\n        latestSelection.getNodes().length === 1\n      ) {\n        if (showCaption) {\n          // Move focus into nested editor\n          $setSelection(null);\n          event.preventDefault();\n          caption.focus();\n          return true;\n        } else if (\n          buttonElem !== null &&\n          buttonElem !== document.activeElement\n        ) {\n          event.preventDefault();\n          buttonElem.focus();\n          return true;\n        }\n      }\n      return false;\n    },\n    [caption, isSelected, showCaption],\n  );\n\n  const $onEscape = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        activeEditorRef.current === caption ||\n        buttonRef.current === event.target\n      ) {\n        $setSelection(null);\n        editor.update(() => {\n          setSelected(true);\n          const parentRootElement = editor.getRootElement();\n          if (parentRootElement !== null) {\n            parentRootElement.focus();\n          }\n        });\n        return true;\n      }\n      return false;\n    },\n    [caption, editor, setSelected],\n  );\n\n  const onClick = useCallback(\n    (payload: MouseEvent) => {\n      const event = payload;\n\n      if (isResizing) {\n        return true;\n      }\n      if (event.target === imageRef.current) {\n        if (event.shiftKey) {\n          setSelected(!isSelected);\n        } else {\n          clearSelection();\n          setSelected(true);\n        }\n        return true;\n      }\n\n      return false;\n    },\n    [isResizing, isSelected, setSelected, clearSelection],\n  );\n\n  const onRightClick = useCallback(\n    (event: MouseEvent): void => {\n      editor.getEditorState().read(() => {\n        const latestSelection = $getSelection();\n        const domElement = event.target as HTMLElement;\n        if (\n          domElement.tagName === 'IMG' &&\n          $isRangeSelection(latestSelection) &&\n          latestSelection.getNodes().length === 1\n        ) {\n          editor.dispatchCommand(\n            RIGHT_CLICK_IMAGE_COMMAND,\n            event as MouseEvent,\n          );\n        }\n      });\n    },\n    [editor],\n  );\n\n  useEffect(() => {\n    const rootElement = editor.getRootElement();\n    const unregister = mergeRegister(\n      editor.registerUpdateListener(({editorState}) => {\n        const updatedSelection = editorState.read(() => $getSelection());\n        if ($isNodeSelection(updatedSelection)) {\n          setSelection(updatedSelection);\n        } else {\n          setSelection(null);\n        }\n      }),\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        (_, activeEditor) => {\n          activeEditorRef.current = activeEditor;\n          return false;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand<MouseEvent>(\n        CLICK_COMMAND,\n        onClick,\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand<MouseEvent>(\n        RIGHT_CLICK_IMAGE_COMMAND,\n        onClick,\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        DRAGSTART_COMMAND,\n        (event) => {\n          if (event.target === imageRef.current) {\n            // TODO This is just a temporary workaround for FF to behave like other browsers.\n            // Ideally, this handles drag & drop too (and all browsers).\n            event.preventDefault();\n            return true;\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(KEY_ENTER_COMMAND, $onEnter, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(\n        KEY_ESCAPE_COMMAND,\n        $onEscape,\n        COMMAND_PRIORITY_LOW,\n      ),\n    );\n\n    rootElement?.addEventListener('contextmenu', onRightClick);\n\n    return () => {\n      unregister();\n      rootElement?.removeEventListener('contextmenu', onRightClick);\n    };\n  }, [\n    clearSelection,\n    editor,\n    isResizing,\n    isSelected,\n    nodeKey,\n    $onEnter,\n    $onEscape,\n    onClick,\n    onRightClick,\n    setSelected,\n  ]);\n\n  const setShowCaption = () => {\n    editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n      if ($isImageNode(node)) {\n        node.setShowCaption(true);\n      }\n    });\n  };\n\n  const onResizeEnd = (\n    nextWidth: 'inherit' | number,\n    nextHeight: 'inherit' | number,\n  ) => {\n    // Delay hiding the resize bars for click case\n    setTimeout(() => {\n      setIsResizing(false);\n    }, 200);\n\n    editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n      if ($isImageNode(node)) {\n        node.setWidthAndHeight(nextWidth, nextHeight);\n      }\n    });\n  };\n\n  const onResizeStart = () => {\n    setIsResizing(true);\n  };\n\n  const {historyState} = useSharedHistoryContext();\n  const {\n    settings: {showNestedEditorTreeView},\n  } = useSettings();\n\n  const draggable = isSelected && $isNodeSelection(selection) && !isResizing;\n  const isFocused = (isSelected || isResizing) && isEditable;\n  return (\n    <Suspense fallback={null}>\n      <>\n        <div draggable={draggable}>\n          {isLoadError ? (\n            <BrokenImage />\n          ) : (\n            <LazyImage\n              className={\n                isFocused\n                  ? `focused ${$isNodeSelection(selection) ? 'draggable' : ''}`\n                  : null\n              }\n              src={src}\n              altText={altText}\n              imageRef={imageRef}\n              width={width}\n              height={height}\n              maxWidth={maxWidth}\n              onError={() => setIsLoadError(true)}\n            />\n          )}\n        </div>\n\n        {showCaption && (\n          <div className=\"image-caption-container\">\n            <LexicalNestedComposer initialEditor={caption}>\n              <AutoFocusPlugin />\n              <MentionsPlugin />\n              <LinkPlugin />\n              <EmojisPlugin />\n              <HashtagPlugin />\n              <KeywordsPlugin />\n              {isCollabActive ? (\n                <CollaborationPlugin\n                  id={caption.getKey()}\n                  providerFactory={createWebsocketProvider}\n                  shouldBootstrap={true}\n                />\n              ) : (\n                <HistoryPlugin externalHistoryState={historyState} />\n              )}\n              <RichTextPlugin\n                contentEditable={\n                  <ContentEditable\n                    placeholder=\"Enter a caption...\"\n                    placeholderClassName=\"ImageNode__placeholder\"\n                    className=\"ImageNode__contentEditable\"\n                  />\n                }\n                ErrorBoundary={LexicalErrorBoundary}\n              />\n              {showNestedEditorTreeView === true ? <TreeViewPlugin /> : null}\n            </LexicalNestedComposer>\n          </div>\n        )}\n        {resizable && $isNodeSelection(selection) && isFocused && (\n          <ImageResizer\n            showCaption={showCaption}\n            setShowCaption={setShowCaption}\n            editor={editor}\n            buttonRef={buttonRef}\n            imageRef={imageRef}\n            maxWidth={maxWidth}\n            onResizeStart={onResizeStart}\n            onResizeEnd={onResizeEnd}\n            captionsEnabled={!isLoadError && captionsEnabled}\n          />\n        )}\n      </>\n    </Suspense>\n  );\n}\n"],"names":["brokenImage","imageCache","RIGHT_CLICK_IMAGE_COMMAND","createCommand","useSuspenseImage","src","cached","resolve","img","hasError","isSVG","LazyImage","altText","className","imageRef","width","height","maxWidth","onError","dimensions","setDimensions","useState","isSVGImage","useEffect","naturalWidth","naturalHeight","BrokenImage","imageStyle","finalWidth","finalHeight","scale","maxHeight","jsx","e","ImageComponent","nodeKey","resizable","showCaption","caption","captionsEnabled","useRef","buttonRef","isSelected","setSelected","clearSelection","useLexicalNodeSelection","isResizing","setIsResizing","isCollabActive","useCollaborationContext","editor","useLexicalComposerContext","selection","setSelection","activeEditorRef","isLoadError","setIsLoadError","isEditable","useLexicalEditable","$onEnter","useCallback","event","latestSelection","$getSelection","buttonElem","$isNodeSelection","$setSelection","$onEscape","parentRootElement","onClick","payload","onRightClick","$isRangeSelection","rootElement","unregister","mergeRegister","editorState","updatedSelection","SELECTION_CHANGE_COMMAND","_","activeEditor","COMMAND_PRIORITY_LOW","CLICK_COMMAND","DRAGSTART_COMMAND","KEY_ENTER_COMMAND","KEY_ESCAPE_COMMAND","setShowCaption","node","$getNodeByKey","$isImageNode","onResizeEnd","nextWidth","nextHeight","onResizeStart","historyState","useSharedHistoryContext","showNestedEditorTreeView","useSettings","draggable","isFocused","Suspense","jsxs","Fragment","LexicalNestedComposer","AutoFocusPlugin","MentionsPlugin","LinkPlugin","EmojisPlugin","HashtagPlugin","KeywordsPlugin","CollaborationPlugin","createWebsocketProvider","HistoryPlugin","RichTextPlugin","ContentEditable","LexicalErrorBoundary","TreeViewPlugin","ImageResizer"],"mappings":"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"}