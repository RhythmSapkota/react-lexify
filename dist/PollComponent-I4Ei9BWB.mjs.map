{"version":3,"file":"PollComponent-I4Ei9BWB.mjs","sources":["../src/nodes/PollComponent.tsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type {Option, Options, PollNode} from './PollNode';\nimport type {JSX} from 'react';\n\nimport './PollNode.css';\n\nimport {useCollaborationContext} from '@lexical/react/LexicalCollaborationContext';\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\nimport {useLexicalNodeSelection} from '@lexical/react/useLexicalNodeSelection';\nimport {mergeRegister} from '@lexical/utils';\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  BaseSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  NodeKey,\n} from 'lexical';\nimport * as React from 'react';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nimport Button from '../ui/Button';\nimport joinClasses from '../utils/joinClasses';\nimport {$isPollNode, createPollOption} from './PollNode';\n\nfunction getTotalVotes(options: Options): number {\n  return options.reduce((totalVotes, next) => {\n    return totalVotes + next.votes.length;\n  }, 0);\n}\n\nfunction PollOptionComponent({\n  option,\n  index,\n  options,\n  totalVotes,\n  withPollNode,\n}: {\n  index: number;\n  option: Option;\n  options: Options;\n  totalVotes: number;\n  withPollNode: (\n    cb: (pollNode: PollNode) => void,\n    onSelect?: () => void,\n  ) => void;\n}): JSX.Element {\n  const {clientID} = useCollaborationContext();\n  const checkboxRef = useRef(null);\n  const votesArray = option.votes;\n  const checkedIndex = votesArray.indexOf(clientID);\n  const checked = checkedIndex !== -1;\n  const votes = votesArray.length;\n  const text = option.text;\n\n  return (\n    <div className=\"PollNode__optionContainer\">\n      <div\n        className={joinClasses(\n          'PollNode__optionCheckboxWrapper',\n          checked && 'PollNode__optionCheckboxChecked',\n        )}>\n        <input\n          ref={checkboxRef}\n          className=\"PollNode__optionCheckbox\"\n          type=\"checkbox\"\n          onChange={(e) => {\n            withPollNode((node) => {\n              node.toggleVote(option, clientID);\n            });\n          }}\n          checked={checked}\n        />\n      </div>\n      <div className=\"PollNode__optionInputWrapper\">\n        <div\n          className=\"PollNode__optionInputVotes\"\n          style={{width: `${votes === 0 ? 0 : (votes / totalVotes) * 100}%`}}\n        />\n        <span className=\"PollNode__optionInputVotesCount\">\n          {votes > 0 && (votes === 1 ? '1 vote' : `${votes} votes`)}\n        </span>\n        <input\n          className=\"PollNode__optionInput\"\n          type=\"text\"\n          value={text}\n          onChange={(e) => {\n            const target = e.target;\n            const value = target.value;\n            const selectionStart = target.selectionStart;\n            const selectionEnd = target.selectionEnd;\n            withPollNode(\n              (node) => {\n                node.setOptionText(option, value);\n              },\n              () => {\n                target.selectionStart = selectionStart;\n                target.selectionEnd = selectionEnd;\n              },\n            );\n          }}\n          placeholder={`Option ${index + 1}`}\n        />\n      </div>\n      <button\n        disabled={options.length < 3}\n        className={joinClasses(\n          'PollNode__optionDelete',\n          options.length < 3 && 'PollNode__optionDeleteDisabled',\n        )}\n        aria-label=\"Remove\"\n        onClick={() => {\n          withPollNode((node) => {\n            node.deleteOption(option);\n          });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default function PollComponent({\n  question,\n  options,\n  nodeKey,\n}: {\n  nodeKey: NodeKey;\n  options: Options;\n  question: string;\n}): JSX.Element {\n  const [editor] = useLexicalComposerContext();\n  const totalVotes = useMemo(() => getTotalVotes(options), [options]);\n  const [isSelected, setSelected, clearSelection] =\n    useLexicalNodeSelection(nodeKey);\n  const [selection, setSelection] = useState<BaseSelection | null>(null);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerUpdateListener(({editorState}) => {\n        setSelection(editorState.read(() => $getSelection()));\n      }),\n      editor.registerCommand<MouseEvent>(\n        CLICK_COMMAND,\n        (payload) => {\n          const event = payload;\n\n          if (event.target === ref.current) {\n            if (!event.shiftKey) {\n              clearSelection();\n            }\n            setSelected(!isSelected);\n            return true;\n          }\n\n          return false;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n    );\n  }, [clearSelection, editor, isSelected, nodeKey, setSelected]);\n\n  const withPollNode = (\n    cb: (node: PollNode) => void,\n    onUpdate?: () => void,\n  ): void => {\n    editor.update(\n      () => {\n        const node = $getNodeByKey(nodeKey);\n        if ($isPollNode(node)) {\n          cb(node);\n        }\n      },\n      {onUpdate},\n    );\n  };\n\n  const addOption = () => {\n    withPollNode((node) => {\n      node.addOption(createPollOption());\n    });\n  };\n\n  const isFocused = $isNodeSelection(selection) && isSelected;\n\n  return (\n    <div\n      className={`PollNode__container ${isFocused ? 'focused' : ''}`}\n      ref={ref}>\n      <div className=\"PollNode__inner\">\n        <h2 className=\"PollNode__heading\">{question}</h2>\n        {options.map((option, index) => {\n          const key = option.uid;\n          return (\n            <PollOptionComponent\n              key={key}\n              withPollNode={withPollNode}\n              option={option}\n              index={index}\n              options={options}\n              totalVotes={totalVotes}\n            />\n          );\n        })}\n        <div className=\"PollNode__footer\">\n          <Button onClick={addOption} small={true}>\n            Add Option\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["getTotalVotes","options","totalVotes","next","PollOptionComponent","option","index","withPollNode","clientID","useCollaborationContext","checkboxRef","useRef","votesArray","checked","votes","text","jsxs","jsx","joinClasses","e","node","target","value","selectionStart","selectionEnd","PollComponent","question","nodeKey","editor","useLexicalComposerContext","useMemo","isSelected","setSelected","clearSelection","useLexicalNodeSelection","selection","setSelection","useState","ref","useEffect","mergeRegister","editorState","$getSelection","CLICK_COMMAND","payload","event","COMMAND_PRIORITY_LOW","cb","onUpdate","$getNodeByKey","$isPollNode","addOption","createPollOption","isFocused","$isNodeSelection","key","Button"],"mappings":"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"}